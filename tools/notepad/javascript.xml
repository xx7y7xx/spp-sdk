<?xml version="1.0" encoding="Windows-1252"?>
<NotepadPlus>
	<AutoComplete language="Javascript">
		<!--Environment ignoreCase="no" startFunc="(" stopFunc=")" paramSeparator="," terminal=";" additionalWordChar=""/-->
		<KeyWord name="above"/>
		<KeyWord name="abs"/>
		<KeyWord name="acos"/>
		<KeyWord name="action"/>
		<KeyWord name="Add" func="yes">
			<Overload retVal="int index">
				<Param name="iCameraPosition obj"/>
			</Overload>
			<Overload retVal="void">
				<Param name="iObject obj"/>
			</Overload>
			<Overload retVal="csVector2" descr="&#x0a;Add another vector2 to this vector2.&#x0a;&#x0a;Vector2 - A object of csVector2.">
				<Param name="object Vector2"/>
			</Overload>
			<Overload retVal="csVector3" descr="&#x0a;Add another vector3 to this vector3.&#x0a;Vector3 - A object of csVector3.">
				<Param name="object Vector3"/>
			</Overload>
			<Overload retVal="csVector3" descr="&#x0a;Add another vector4 to this vector4.&#x0a;Vector4 - A object of csVector4.">
				<Param name="object Vector4"/>
			</Overload>
			<Overload retVal="csMatrix3" descr="&#x0a;Add another Matrix3 to this Matrix3.&#x0a;Matrix3 - A object of csMatrix3.">
				<Param name="object Matrix3"/>
			</Overload>
			<Overload retVal="csColor4" descr="&#x0a;Add another color4 to this one.&#x0a;Color4 - A object of csColor4.">
				<Param name="object Color4"/>
			</Overload>
			<Overload retVal="csColor" descr="&#x0a;Add another color to this one.&#x0a;Color - A object of csColor.">
				<Param name="object Color"/>
			</Overload>
			<Overload retVal="csQuaternion" descr="&#x0a;Add quaternion to this one.&#x0a;Quaternion - A object of csQuaternion.">
				<Param name="object Quaternion"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddBodyToGroup" func="yes">
			<Overload retVal="void" descr="&#x0a;Add a body to the specified group.&#x0a;
				body -- the body to add to the group.&#x0a;
				group -- the name of the group to add the body to. Creates the group if it does not exist.&#x0a;
				Demo -- AddBodyToGroup(body, 'group');">
				<Param name="iRigidBody *body"/>
				<Param name="const char *group"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddEvent" func="yes">
			<Overload retVal="bool">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddForceDuration" func="yes">
			<Overload retVal="void" descr="&#x0a;Add a body to the specified group.&#x0a;
				pcobject -- the object that will receive this force every step until the end of the given time.&#x0a;
				force -- a vector representing the force to add to this object.&#x0a;
				relative -- if set to true, the given force and position are both in object space; otherwise they are in world space.&#x0a;
				position -- the position of the force.&#x0a;
				seconds -- the number of seconds that this force should last.">
				<Param name="iPcMechanicsObject *pcobject"/>
				<Param name="const csVector3 &force"/>
				<Param name="bool relative"/>
				<Param name="const csVector3 &position"/>
				<Param name="float seconds"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddForceFrame" func="yes">
			<Overload retVal="bool" descr="&#x0a;Add a body to the specified group.&#x0a;">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddForceTagged" func="yes">
			<Overload retVal="bool" descr="&#x0a;Add a body to the specified group.&#x0a;">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddListener" func="yes">
			<Overload retVal="void">
				<Param name="Object CameraListener "/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddAdjacent"/>
		<KeyWord name="AddComponent" func="yes">
			<Overload retVal="int">
				<Param name="float pos"/>
				<Param name="float w"/>
				<Param name="float s"/>
				<Param name="int mode"/>
				<Param name="iMaterialWrapper image"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddMeshAndChildren" func="yes">
			<Overload retVal="void">
				<Param name="iMeshWrapper mesh"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AddVelocity" func="yes">
			<Overload retVal="void" descr="&#x0a;Exerts a velocity on the body in world coordinates.&#x0a;
				velocity -- the direction what it will want to move.&#x0a;
				Demo -- AddVelocity([0, 0, 1])"> 
				<Param name="vector3 velocity" />
		    </Overload>
		</KeyWord>
		<KeyWord name="Add2" func="yes">
			<Overload retVal="csColor4" descr="&#x0a;Add another color to this one.&#x0a;
				Color - A object of csColor."> 
				<Param name="object Color" />
		    </Overload>
		</KeyWord>
		<KeyWord name="alert"/>
		<KeyWord name="align"/>
		<KeyWord name="aLinkcolor"/>
		<KeyWord name="all"/>
		<KeyWord name="AllowResize" func="yes">
			<Overload retVal="void">
				<Param name="bool iAllow"/>
			</Overload>
		</KeyWord>
		<KeyWord name="ambient"/>
		<KeyWord name="Anchor"/>
		<KeyWord name="anchor"/>
		<KeyWord name="anchors"/>
		<KeyWord name="appCodeName"/>
		<KeyWord name="appCore"/>
		<KeyWord name="Applet"/>
		<KeyWord name="applets"/>
		<KeyWord name="apply"/>
		<KeyWord name="appMinorVersion"/>
		<KeyWord name="appName"/>
		<KeyWord name="appVersion"/>
		<KeyWord name="Area" func="yes">
			<Overload retVal="float" descr="&#x0a;Compute area of box.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="arguments"/>
		<KeyWord name="arguments.callee"/>
		<KeyWord name="arguments.caller"/>
		<KeyWord name="arguments.length"/>
		<KeyWord name="arity"/>
		<KeyWord name="Array"/>
		<KeyWord name="asin"/>
		<KeyWord name="AssertTrue" func="yes">
			<Overload retVal="void" descr="&#x0a;Abort the program if assertion is false.&#x0a;&#x0a;expr -- bool value, if it is false, then abort the program.&#x0a;&#x0a;desc_n -- show some info before abort the program.">
				<Param name="expr ["/>
				<Param name="desc_1] ["/>
				<Param name="desc_2] ["/>
				<Param name="desc_n]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Assign" func="yes">
			<Overload retVal="Matrix4" descr="&#x0a;Assign another matrix to this one.&#x0a;
				m - a object of Matrix4.">
				<Param name="Matrix4 m" />
		    </Overload>
		</KeyWord>
		<KeyWord name="Assign2"/>
		<KeyWord name="Assignment"/>
		<KeyWord name="Assignment" func="yes">
			<Overload retVal="csVector4" descr="&#x0a;Assignment operator.&#x0a;
				v - a object of csVector4.">
				<Param name="csVector4 v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="atan"/>
		<KeyWord name="atan2"/>
		<KeyWord name="atob"/>
		<KeyWord name="attachEvent"/>
		<KeyWord name="attributes"/>
		<KeyWord name="AutoRun" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop auto-running.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- AutoRun(true);">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="autoStart" func="yes"/>
		<KeyWord name="availHeight"/>
		<KeyWord name="availLeft"/>
		<KeyWord name="availTop"/>
		<KeyWord name="availWidth"/>
		<KeyWord name="B"/>
		<KeyWord name="back"/>
		<KeyWord name="background"/>
		<KeyWord name="backgroundColor"/>
		<KeyWord name="backgroundImage"/>
		<KeyWord name="Backward" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop going backward.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- Backward(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="below"/>
		<KeyWord name="BeginDraw" func="yes">
			<Overload retVal="bool">
				<Param name="void"/>
			</Overload>
			<Overload retVal="bool" descr="&#x0a;Start a new frame.&#x0a;
				DrawFlags -- the flags of draw.&#x0a;">
				<Param name="int DrawFlags"/>
			</Overload>
		</KeyWord>
		<KeyWord name="bgColor"/>
		<KeyWord name="big"/>
		<KeyWord name="blink"/>
		<KeyWord name="blur"/>
		<KeyWord name="body"/>
		<KeyWord name="bold"/>
		<KeyWord name="boolean"/>
		<KeyWord name="Boolean"/>
		<KeyWord name="border"/>
		<KeyWord name="borderBottomWidth"/>
		<KeyWord name="borderColor"/>
		<KeyWord name="borderLeftWidth"/>
		<KeyWord name="borderRightWidth"/>
		<KeyWord name="borderStyle"/>
		<KeyWord name="borderTopWidth"/>
		<KeyWord name="borderWidths"/>
		<KeyWord name="bottom"/>
		<KeyWord name="break"/>
		<KeyWord name="btoa"/>
		<KeyWord name="bufferDepth"/>
		<KeyWord name="Button"/>
		<KeyWord name="byte"/>
		<KeyWord name="C"/>
		<KeyWord name="C3D"/>
		<KeyWord name="cacheMgr"/>
		<KeyWord name="CalculatePointSegment"/>
		<KeyWord name="call"/>
		<KeyWord name="camPositions"/>
		<KeyWord name="captureEvents"/>
		<KeyWord name="case"/>
		<KeyWord name="catch"/>
		<KeyWord name="ceil"/>
		<KeyWord name="center"/>
		<KeyWord name="char"/>
		<KeyWord name="characterSet"/>
		<KeyWord name="charAt"/>
		<KeyWord name="charCodeAt"/>
		<KeyWord name="Checkbox"/>
		<KeyWord name="checked"/>
		<KeyWord name="childNodes"/>
		<KeyWord name="Clamp"/>
		<KeyWord name="ClampDown"/>
		<KeyWord name="class"/>
		<KeyWord name="classes"/>
		<KeyWord name="className"/>
		<KeyWord name="Classify"/>
		<KeyWord name="clear"/>
		<KeyWord name="Clear" func="yes">
			<Overload retVal="void" descr="&#x0a;clear all movement.&#x0a;
				Demo -- Clear();">
				<Param name="void"/>
			</Overload>
			<Overload retVal="void">
				<Param name="int color"/>
			</Overload>
		</KeyWord>
		<KeyWord name="ClearAll" func="yes">
			<Overload retVal="void">
				<Param name="int color"/>
			</Overload>
		</KeyWord>
		<KeyWord name="ClearAllForces" func="yes">
			<Overload retVal="void" descr="&#x0a;Clear all forces.&#x0a;
				Demo -- ClearAllForces();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="ClearForces" func="yes">
			<Overload retVal="void" descr="&#x0a;Remove the given body from the force queues.&#x0a;
				pcobject -- a pointer to the iPcMechanicsObject to remove all forces from.&#x0a;
				Demo -- ClearForces();">
				<Param name="iPcMechanicsObject *pcobject"/>
			</Overload>
		</KeyWord>
		<KeyWord name="ClearFarPlane" func="yes">
			<Overload retVal="void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="clearInterval"/>
		<KeyWord name="clearParameters"/>
		<KeyWord name="ClearRenderPriorities" func="yes">
			<Overload retVal="void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="clearTimeout"/>
		<KeyWord name="click"/>
		<KeyWord name="clientInformation"/>
		<KeyWord name="clip"/>
		<KeyWord name="clipboardData"/>
		<KeyWord name="ClipLine"/>
		<KeyWord name="ClipLineGeneral"/>
		<KeyWord name="ClipLineSafe"/>
		<KeyWord name="clearScreen"/>
		<KeyWord name="clearZBuf"/>
		<KeyWord name="Clone" func="yes">
			<Overload retVal="Object iCameraPosition">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Clone" func="yes">
			<Overload retVal="Object iCamera">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="close"/>
		<KeyWord name="Close" func="yes">
			<Overload retVal="void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="closed"/>
		<KeyWord name="CmdLine" />
		<KeyWord name="Col" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Get a column from this matrix as a vector.&#x0a;
				n -- n is the type of size_t of a value.">
				<Param name="size_t n"/>
			</Overload>
			<Overload retVal="csVector4" descr="&#x0a;Get a column from this matrix as a vector.&#x0a;
				n -- n is the type of size_t of a value.">
				<Param name="size_t n"/>
			</Overload>
		</KeyWord>
		<KeyWord name="colorDepth"/>
		<KeyWord name="compile"/>
		<KeyWord name="complete"/>
		<KeyWord name="components"/>
		<KeyWord name="concat"/>
		<KeyWord name="confirm"/>
		<KeyWord name="Conjugate" func="yes">
			<Overload retVal="void" descr="&#x0a;Set this quaternion to its own conjugate.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="CONSOLE"/>
		<KeyWord name="const"/>
		<KeyWord name="constructor"/>
		<KeyWord name="Contains"/>
		<KeyWord name="ContainsRel"/>
		<KeyWord name="contextual"/>
		<KeyWord name="continue"/>
		<KeyWord name="controllers"/>
		<KeyWord name="cookie"/>
		<KeyWord name="cookieEnabled"/>
		<KeyWord name="Copy"/>
		<KeyWord name="Correct" func="yes">
			<Overload retVal="void">
				<Param name=" int n"/>
			</Overload>
		</KeyWord>
		<KeyWord name="cos"/>
		<KeyWord name="count"/>
		<KeyWord name="cpuClass"/>
		<KeyWord name="CreateAffector" func="yes">
			<Overload retVal="affector object" descr="&#x0a;Creat an empty affector object.">
				<Param name="[none]"/>
			</Overload>
			<Overload retVal="affector object" descr="&#x0a;Creat an empty affector object.">
				<Param name="[string targetProperty]"/>
				<Param name="[string interpolator]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateAnimation" func="yes">
			<Overload retVal="animation object" descr="&#x0a;create an animation.">
				<Param name="[string name]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateBaseMaterial" func="yes">
			<Overload retVal="Object iMaterial">
				<Param name=" iTextureWrapper tx "/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateBody" func="yes">
			<Overload retVal="iRigidBody" descr="&#x0a;Create an iRigidBody and add it to the system.&#x0a;
				Demo -- var body = Obj.CreateBody();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateChild" func="yes">
			<Overload retVal="node">
				<Param name="typeof node"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateCollection" func="yes">
			<Overload retVal="Object iCollection">
				<Param name=" string name "/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateDecal" func="yes">
			<Overload retVal="Object iDecal">
				<Param name=" iDecalTemplate decalTemplate "/>
				<Param name=" iMeshWrapper mesh  "/>
				<Param name=" csVector3 pos "/>
				<Param name=" csVector3 up "/>
				<Param name=" csVector3 normal "/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateDecalTemplate" func="yes">
			<Overload retVal="Object iDecalTemplate">
				<Param name=" iMaterialWrapper material "/>
			</Overload>
		</KeyWord>
		<KeyWord name="createElement"/>
		<KeyWord name="createEventObject"/>
		<KeyWord name="CreateJoint" func="yes">
			<Overload retVal="Object iJoint" descr="&#x0a;Create a joint between the two given bodies.&#x0a;
				body1 -- one body.&#x0a;
				body2 -- another body.&#x0a;
				Demo -- CreateJoint(body1, body2);">
				<Param name="iRigidBody *body1"/>
				<Param name="iRigidBody *body2"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateLight">
			<Overload retVal="Object iLight">
				<Param name="string name"/>
				<Param name="csVector3 pos"/>
				<Param name="float radius"/>
				<Param name="csColor color"/>
				<Param name="dyntype  = CS_LIGHT_DYNAMICTYPE_STATIC "/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateLoaderContext">
			<Overload retVal="Object iLight">
				<Param name="iCollection collection = 0"/>
				<Param name="bool searchCollectionOnly = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateMeshWrapper" func="yes">
			<Overload retVal="Object iMeshWrapper">
				<Param name=" string name"/>
			</Overload>
			<Overload retVal="Object iMeshWrapper">
				<Param name=" string classid"/>
				<Param name=" string name"/>
				<Param name=" iSector sector = 0"/>
				<Param name=" pos csVector3 (0,0,0)"/>
			</Overload>
			<Overload retVal="Object iMeshWrapper">
				<Param name=" iMeshObject meshobj"/>
				<Param name=" string name"/>
				<Param name=" iSector sector = 0"/>
				<Param name=" pos csVector3 (0,0,0)"/>
			</Overload>
			<Overload retVal="Object iMeshWrapper">
				<Param name=" iMeshFactoryWrapper factory"/>
				<Param name=" string name"/>
				<Param name=" iSector sector = 0"/>
				<Param name=" pos csVector3 (0,0,0)"/>
			</Overload>
		</KeyWord>
		<KeyWord name="CreateMaterial">
			<Overload retVal="Object iMaterialWrapper">
				<Param name="string name"/>
				<Param name="iTextureWrapper texture"/>
			</Overload>
		</KeyWord>
		<KeyWord name="createPopup"/>
		<KeyWord name="createStatement"/>
		<KeyWord name="createStyleSheet"/>
		<KeyWord name="CreateSector">
			<Overload retVal="Object iSector">
				<Param name="string name"/>
				<Param name="addToList = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="createTextNode"/>
		<KeyWord name="CreateTexture">
			<Overload retVal="Object iTextureWrapper">
				<Param name="string name"/>
				<Param name="string name"/>
				<Param name="csColor transp"/>
				<Param name="int flags"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Cross" func="yes">
			<Overload retVal="void" descr="&#x0a; Take the cross product of two vectors.&#x0a;
				v - a object of csVector3.">
				<Param name="csVector3 v" />
		    </Overload>
			<Overload retVal="void" descr="&#x0a; Take the cross product of two vectors.&#x0a;
				v - a object of csVector4.">
				<Param name="csVector4 v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="cross"/>
		<KeyWord name="crypto"/>
		<KeyWord name="current"/>
		<KeyWord name="data"/>
		<KeyWord name="Date"/>
		<KeyWord name="debugger"/>
		<KeyWord name="default"/>
		<KeyWord name="defaultAmbient"/>
		<KeyWord name="defaultCharset"/>
		<KeyWord name="defaultChecked"/>
		<KeyWord name="defaultStatus"/>
		<KeyWord name="defaultValue"/>
		<KeyWord name="defaultView"/>
		<KeyWord name="DefineAutoSubscription" func="yes">
			<Overload retVal="[bool true or false]" descr="&#x0a;Defines animation event subscription.">
				<Param name="[string eventName]"/>
				<Param name="[string action]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="delete"/>
		<KeyWord name="DeleteDecal" func="yes">
			<Overload retVal="void">
				<Param name=" iDecal decal  "/>
			</Overload>
		</KeyWord>
		<KeyWord name="Description" func="yes">
			<Overload retVal="csString" descr="&#x0a; Return a textual representation of the vector2 in the form 'x,y'.">
				<Param name="" />
		    </Overload>
			<Overload retVal="csString" descr="&#x0a; Return a textual representation of the vector3 in the form 'x,y,z'.">
				<Param name="" />
		    </Overload>
			<Overload retVal="csString" descr="&#x0a; Return a textual representation of the vector4 in the form 'x,y,z,w'.">
				<Param name="" />
		    </Overload>
			<Overload retVal="csString" descr="&#x0a; Return a textual representation of the transform.">
				<Param name="" />
		    </Overload>
		</KeyWord>
		<KeyWord name="DestroyAnimation" func="yes">
			<Overload retVal="undefined" descr="&#x0a;destory the animation object and all the examples that specified to the animation.">
				<Param name="[animation object]"/>
			</Overload>
			<Overload retVal="undefined" descr="&#x0a;destory the animation object and all the examples that specified to the animation.">
				<Param name="[string name]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="DestroyAnimationInstance" func="yes">
			<Overload retVal="undefined" descr="&#x0a;destory the specified animationInstance object.">
				<Param name="[animationInstance_object]"/>
			</Overload>
			<Overload retVal="undefined" descr="&#x0a;destory all the animation object example.">
				<Param name="[animation_object]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="detachEvent"/>
		<KeyWord name="Determinant" func="yes">
			<Overload retVal="float" descr="&#x0a;Compute the determinant of this matrix.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="dialogArguments"/>
		<KeyWord name="dialogHeight"/>
		<KeyWord name="dialogLeft"/>
		<KeyWord name="dialogTop"/>
		<KeyWord name="dialogWidth"/>
		<KeyWord name="dir"/>
		<KeyWord name="directionalradiation"/>
		<KeyWord name="directories"/>
		<KeyWord name="disableExternalCapture"/>
		<KeyWord name="DisableStepFast" func="yes">
			<Overload retVal="void" descr="&#x0a;Disable fast stepping.&#x0a;
				Demo -- DisableStepFast();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="display"/>
		<KeyWord name="Distance"/>
		<KeyWord name="Divide" func="yes">
			<Overload retVal="csVector2" descr="&#x0a;Divide this vector2 by a scalar.&#x0a;
				f - a value."> 
				<Param name="float f" />
		    </Overload>
			<Overload retVal="csVector4" descr="&#x0a;  Divide this vector4 by a scalar.&#x0a;
				f - a value."> 
				<Param name="float f" />
		    </Overload>
		</KeyWord>
		<KeyWord name="Divscalar" func="yes">
			<Overload retVal="csVector2" descr="&#x0a; Divide this matrix by a scalar."> 
				<Param name="float f" />
		    </Overload>
		</KeyWord>
		<KeyWord name="do"/>
		<KeyWord name="doctype"/>
		<KeyWord name="document"/>
		<KeyWord name="documentElement"/>
		<KeyWord name="domain"/>
		<KeyWord name="DominantAxis" func="yes">
			<Overload retVal="int" descr="&#x0a; Return index of the largest axis.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="Dot" func="yes">
			<Overload retVal="float" descr="&#x0a;Take the dot product of two vectors.&#x0a;
				v - a object of csVector2.">
				<Param name="csVector2 v" />
		    </Overload>
			<Overload retVal="float" descr="&#x0a; Take the dot product of two vectors.&#x0a;
				v - a object of csVector3.">
				<Param name="csVector3 v" />
		    </Overload>
			<Overload retVal="float" descr="&#x0a; Take the dot product of two vectors.&#x0a;
				v - a object of csVector4.">
				<Param name="csVector4 v" />
		    </Overload>
			<Overload retVal="float" descr="&#x0a; Return euclidian inner-product (dot).&#x0a;
				q - q is a object of csQuaternion.">
				<Param name="const csQuaternion& q" />
		    </Overload>
		</KeyWord>
		<KeyWord name="double"/>
		<KeyWord name="doubleBuffer"/>
		<KeyWord name="DrawBox" func="yes">
			<Overload retVal="void">
				<Param name=" int x  "/>
				<Param name=" int y  "/>
				<Param name=" int w  "/>
				<Param name=" int h  "/>
				<Param name=" int color "/>
			</Overload>
		</KeyWord>
		<KeyWord name="DrawLine" func="yes">
			<Overload retVal="void">
				<Param name=" float x1  "/>
				<Param name=" float y1  "/>
				<Param name=" float x2  "/>
				<Param name=" float y2  "/>
				<Param name=" int color "/>
			</Overload>
		</KeyWord>
		<KeyWord name="DrawPixel" func="yes">
			<Overload retVal="void">
				<Param name=" int x  "/>
				<Param name=" int y  "/>
				<Param name=" int color  "/>
			</Overload>
		</KeyWord>
		<KeyWord name="driver2d"/>
		<KeyWord name="DriverManager"/>
		<KeyWord name="duration"/>
		<KeyWord name="dump"/>
		<KeyWord name="E"/>
		<KeyWord name="elementFromPoint"/>
		<KeyWord name="elements"/>
		<KeyWord name="else"/>
		<KeyWord name="embeds"/>
		<KeyWord name="Empty"/>
		<KeyWord name="enabledPlugin"/>
		<KeyWord name="enableExternalCapture"/>
		<KeyWord name="EnableStepFast" func="yes">
			<Overload retVal="void" descr="&#x0a;Enable fast stepping.&#x0a;
				Demo -- EnableStepFast();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="encoding"/>
		<KeyWord name="engine"/>
		<KeyWord name="enum"/>
		<KeyWord name="Equal" func="yes">
			<Overload retVal="bool" descr="&#x0a;Check if two vectors are equal.&#x0a;
				v - a object of csVector2.">
				<Param name="csVector2 v" />
		    </Overload>
			<Overload retVal="bool" descr="&#x0a;Check if two vectors are equal.&#x0a;
				v - a object of csVector3.">
				<Param name="csVector3 v" />
		    </Overload>
			<Overload retVal="bool" descr="&#x0a;Check if two matricies are equal.&#x0a;
				m - a object of csMatrix3.">
				<Param name="csMatrix3 m" />
		    </Overload>
		</KeyWord>
		<KeyWord name="escape"/>
		<KeyWord name="eval"/>
		<KeyWord name="event"/>
		<KeyWord name="Event"/>
		<KeyWord name="Exclude"/>
		<KeyWord name="exec"/>
		<KeyWord name="execCommand"/>
		<KeyWord name="execScript"/>
		<KeyWord name="executeQuery"/>
		<KeyWord name="executeUpdate"/>
		<KeyWord name="exit" func="yes">
			<Overload retVal="void" descr="&#x0a;Exit from SPP runtime.">
				<Param name="[int status]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Exp" func="yes">
			<Overload retVal=" csQuaternion" descr="&#x0a; Get quaternion exp.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="expando"/>
		<KeyWord name="export"/>
		<KeyWord name="Extend"/>
		<KeyWord name="extends"/>
		<KeyWord name="external"/>
		<KeyWord name="false"/>
		<KeyWord name="farplane"/>
		<KeyWord name="fgColor"/>
		<KeyWord name="fileCreatedDate"/>
		<KeyWord name="fileModifiedDate"/>
		<KeyWord name="filename"/>
		<KeyWord name="fileSize"/>
		<KeyWord name="fileUpdatedDate"/>
		<KeyWord name="FileUpload"/>
		<KeyWord name="FireEvent" func="yes">
			<Overload retVal="undefined">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="final"/>
		<KeyWord name="finally"/>
		<KeyWord name="Find" func="yes">
			<Overload retVal="int n">
				<Param name="iCameraPosition obj"/>
			</Overload>
		</KeyWord>
		<KeyWord name="find"/>
		<KeyWord name="FindByName" func="yes">
			<Overload retVal="Object iCameraPosition">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindCameraPosition" func="yes">
			<Overload retVal=" Object iCameraPosition">
				<Param name=" string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindLightID" func="yes">
			<Overload retVal=" Object iLight">
				<Param name=" MD5 id"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindMaterial" func="yes">
			<Overload retVal=" Object iMaterialWrapper">
				<Param name=" string name"/>
			</Overload>
			<Overload retVal=" Object iMaterialWrapper">
				<Param name=" string name"/>
				<Param name=" iCollection collection"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindMeshFactory" func="yes">
			<Overload retVal=" Object iMeshFactoryWrapper">
				<Param name=" string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindMeshObject" func="yes">
			<Overload retVal=" Object iMeshWrapper" descr="&#x0a;Find the given mesh object.&#x0a;
				name -- the meshobj's name form world.&#x0a;
				Demo -- FindMeshObject('Cube');">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindPoint"/>
		<KeyWord name="FindSector" func="yes">
			<Overload retVal=" Object iSector">
				<Param name=" string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindShader" func="yes">
			<Overload retVal=" Object iShader">
				<Param name=" string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindScreenTarget" func="yes">
			<Overload retVal=" iMeshWrapper result.mesh">
				<Param name=" csVector2 pos"/>
				<Param name=" float maxdist"/>
				<Param name=" iCamera camera"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindTexture" func="yes">
			<Overload retVal=" Object iTextureWrapper">
				<Param name=" string name"/>
				<Param name=" collection = 0"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FindRGB" func="yes">
			<Overload retVal=" int">
				<Param name=" int r"/>
				<Param name=" int g"/>
				<Param name=" int b"/>
				<Param name=" int a = 255"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FinishDraw" func="yes">
			<Overload retVal=" void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="firstChild"/>
		<KeyWord name="firstperson"/>
		<KeyWord name="fixed"/>
		<KeyWord name="float"/>
		<KeyWord name="floor"/>
		<KeyWord name="focus"/>
		<KeyWord name="follow"/>
		<KeyWord name="fontcolor"/>
		<KeyWord name="fontFamily"/>
		<KeyWord name="fontsize"/>
		<KeyWord name="fontSize"/>
		<KeyWord name="fontWeight"/>
		<KeyWord name="for"/>
		<KeyWord name="Form"/>
		<KeyWord name="form"/>
		<KeyWord name="formName"/>
		<KeyWord name="forms"/>
		<KeyWord name="Forward" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop going forward.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- Forward(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FOV"/>
		<KeyWord name="Frame"/>
		<KeyWord name="frameElement"/>
		<KeyWord name="frames"/>
		<KeyWord name="freelook"/>
		<KeyWord name="fromCharCode"/>
		<KeyWord name="Function"/>
		<KeyWord name="function"/>
		<KeyWord name="fullscreen"/>
		<KeyWord name="gamma"/>
		<KeyWord name="Get" func="yes">
			<Overload retVal=" Object iCameraPosition ">
				<Param name="int n"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetActiveChild" func="yes"> 
			<Overload retVal="window_object" descr="&#x0a;return an activation child window."> 
				<Param name="[none]"/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetAffectorAtIdx" func="yes">
			<Overload retVal="undefined" descr="&#x0a;get the specified affector object.">
				<Param name="[int index]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetAnimation" func="yes">
			<Overload retVal="animation object" descr="&#x0a;get an animation.">
				<Param name="[sting animation_name]"/>
			</Overload>
			<Overload retVal="animation object" descr="&#x0a;get an animation.">
				<Param name="[index animation_index]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetAnimationInstanceAtIdx" func="yes">
			<Overload retVal="animationInstance_objcet" descr="&#x0a;get the animationInstance object by the index.">
				<Param name="[animationInstance_object_index]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="getAttention"/>
		<KeyWord name="GetAxisAngle"/>
		<KeyWord name="GetAxisAngle" func="yes">
			<Overload retVal="void" descr="&#x0a; Get a quaternion as axis-angle representation.&#x0a;">   
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetCamera" func="yes">
			<Overload retVal=" Object iCamera ">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetCenter" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Get the center of this sphere."> 
				<Param name="void"/> 
			</Overload> 
		</KeyWord> 
		<KeyWord name="GetChild" func="yes"> 
			<Overload retVal="window_object" descr="&#x0a;return the child window which is specified."> 
				<Param name="[string window_id]"/> 
			</Overload> 
		</KeyWord> 	
		<KeyWord name="GetChildAtPosition" func="yes"> 
			<Overload retVal="window_object" descr="&#x0a;return the child window which is specified position."> 
				<Param name="[vector2 position]"/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetCollection" func="yes">
			<Overload retVal=" Object iCollection ">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetConjugate" func="yes"> 
			<Overload retVal="csQuaternion" descr="&#x0a;Get the conjugate quaternion."> 
				<Param name=""/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="getConnection"/>
		<KeyWord name="GetCorner"/>
		<KeyWord name="getDate"/>
		<KeyWord name="getDay"/>
		<KeyWord name="GetDecal" func="yes">
			<Overload retVal="Object iDecal ">
				<Param name="int idx"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetDecalCount" func="yes">
			<Overload retVal=" int ">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetDynamicSystem" func="yes">
			<Overload retVal="iDynamicSystem Object" descr="&#x0a;Get the dynamic system.&#x0a;
				Demo -- GetDynamicSystem();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetEffectiveAlpha" func="yes"> 
			<Overload retVal="float:alpha_value" descr="&#x0a;return the alpha value of the window."> 
				<Param name="[none]"/> 
			</Overload> 
		</KeyWord> 			
		<KeyWord name="getElementById"/>
		<KeyWord name="getElementsByName"/>
		<KeyWord name="getElementsByTagName"/>
		<KeyWord name="GetEulerAngles" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Get quaternion using Euler angles X, Y, Z, expressed in radians.&#x0a;">   
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetFront" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Get the front vector in 'other' space.&#x0a; This is basically equivalentto doing: tr.This2OtherRelative (csVector3 (0, 0, 1)) but it is more efficient.&#x0a;"> 
				<Param name="" />
		    </Overload>
		</KeyWord>
		<KeyWord name="GetFontServer" func="yes">
			<Overload retVal=" Object iFontServer ">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="getFullYear"/>
		<KeyWord name="GetGravity" func="yes">
			<Overload retVal="const csVector3" descr="&#x0a;Return the inverse of this matrix.&#x0a;
				Demo -- GetGravity();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="getHours"/>
		<KeyWord name="GetInverse" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Return the inverse of this matrix.">
				<Param name=""/>
			</Overload>
			<Overload retVal="csMatrix4" descr="&#x0a;Return the inverse of this matrix.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetMatrix" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Get quaternion using 3x3 rotation matrix.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="getMilliseconds"/>
		<KeyWord name="getMinutes"/>
		<KeyWord name="getMonth"/>
		<KeyWord name="GetMouseCursor" func="yes"> 
			<Overload retVal="inage_object" descr="&#x0a;return the mouse image of the current window."> 
				<Param name="[bool]"/> 
			</Overload> 
		</KeyWord> 
		<KeyWord name="GetNearbyLights" func="yes">
			<Overload retVal="int">
				<Param name="iSector sector"/>
				<Param name="csVector3 pos"/>
				<Param name="iLight light"/>
				<Param name="int max_num_lights"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetNearbyMeshes" func="yes">
			<Overload retVal=" Object iMeshWrapperIterator">
				<Param name="iSector sector"/>
				<Param name="csBox3 box"/>
				<Param name="crossPortals = true"/>
			</Overload>
			<Overload retVal=" Object iMeshWrapperIterator">
				<Param name="iSector sector"/>
				<Param name="csVector3 pos"/>
				<Param name="crossPortals = true"/>
			</Overload>
			<Overload retVal=" Object iMeshWrapperIterator">
				<Param name="iSector sector"/>
				<Param name="csVector3 start"/>
				<Param name="csVector3 end"/>
				<Param name="crossPortals = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetNearbyObjects" func="yes">
			<Overload retVal="Object iObjectIterator">
				<Param name="iSector sector"/>
				<Param name="csVector3 pos"/>
				<Param name="float radius"/>
				<Param name="crossPortals = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetNumAnimationInstances" func="yes">
			<Overload retVal="size_t type" descr="&#x0a;return the total number of the Instantiation AnimationInstances.">
				<Param name="none"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetOrigin" func="yes"> 
			<Overload retVal="csVector3" descr="&#x0a; Get origin of transformed coordinate system.This is equivalent to calling GetO2TTranslation()."> 
				<Param name=""/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetO2T" func="yes"> 
			<Overload retVal="csMatrix3" descr="&#x0a; Get 'other' to 'this' transformation matrix.&#x0a;his is the 3x3 matrix M from the transform equation T=M*(O-V)."> 
				<Param name=""/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetO2TTranslation" func="yes"> 
			<Overload retVal="csMatrix3" descr="&#x0a;Get 'other' to 'this' translation. This is the vector Vfrom the transform equation T=M*(O-V).&#x0a;This is equivalent to calling GetOrigin()."> 
				<Param name=""/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetPixelSize" func="yes"> 
			<Overload retVal="window_pixel_size" descr="&#x0a;get the size of the window pixel."> 
				<Param name="[none]"/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetProjectionMatrix" func="yes">
			<Overload retVal="Object Matrix4">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetProperty" func="yes">
			<Overload retVal="property value">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetQuaternion"/>
		<KeyWord name="GetRadius"/>
		<KeyWord name="GetRenderPriorityName" func="yes">
			<Overload retVal="string name">
				<Param name="RenderPriority priority"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetRenderPrioritySorting" func="yes">
			<Overload retVal="enum csRenderPrioritySorting ">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetRight" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; the right vector in 'other' space.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetScale"/>
		<KeyWord name="getSeconds"/>
		<KeyWord name="getSelection"/>
		<KeyWord name="GetSimulationSpeed" func="yes">
			<Overload retVal="float" descr="&#x0a;Get the current simulation speed.&#x0a;
				Demo -- GetSimulationSpeed()">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetSize"/>
		<KeyWord name="GetT2O" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Get 'this' to 'other' transformation matrix.This corresponds to the inverse of M.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetT2OTranslation" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;  Get 'this' to 'other' translation. This will calculate and return -(M*V).">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetStepTime" func="yes">
			<Overload retVal="float" descr="&#x0a;Get the current step time.&#x0a;
				Demo -- GetStepTime()">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetTargetChildAtPosition" func="yes"> 
			<Overload retVal="window_object" descr="&#x0a;retur the child window which is  at the specified position."> 
				<Param name="[vector2 position]"/> 
			</Overload> 
		</KeyWord> 	
		<KeyWord name="getTime"/>
		<KeyWord name="getTimezoneOffset"/>
		<KeyWord name="GetTransform"/>
		<KeyWord name="GetTranspose" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Return the transpose of this matrix.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		
		<KeyWord name="GetUnclippedPixelRect" func="yes"> 
			<Overload retVal="void" descr="&#x0a;Exit from SPP runtime."> 
				<Param name="[int status]"/> 
			</Overload> 
		</KeyWord>
		<KeyWord name="GetUp" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Get the up vector in 'other' space.&#x0a;"> 
				<Param name="" />
		    </Overload>
		</KeyWord>
		<KeyWord name="getUTCDate"/>
		<KeyWord name="getUTCDay"/>
		<KeyWord name="getUTCFullYear"/>
		<KeyWord name="getUTCHours"/>
		<KeyWord name="getUTCMilliseconds"/>
		<KeyWord name="getUTCMinutes"/>
		<KeyWord name="getUTCMonth"/>
		<KeyWord name="getUTCSeconds"/>
		<KeyWord name="getValue"/>
		<KeyWord name="GetVisibleMeshes" func="yes">
			<Overload retVal="Object iMeshWrapperIterator  ">
				<Param name="iSector sector"/>
				<Param name="csVector3 pos"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetVisibleObjects" func="yes">
			<Overload retVal="Object iObjectIterator ">
				<Param name="iSector sector"/>
				<Param name="csVector3 pos"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GetVisibleSides"/>
		<KeyWord name="getYear"/>
		<KeyWord name="global"/>
		<KeyWord name="go"/>
		<KeyWord name="goto"/>
		<KeyWord name="gravity"/>
		<KeyWord name="GUI" func="yes">
			<Overload retVal="object scheme">
				<Param name="name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Animation"/>
		<KeyWord name="GUI.Combobox"/>
		<KeyWord name="GUI.Checkbox"/>
		<KeyWord name="GUI.CreateObjectLayout">
			<Overload retVal="value">
				<Param name="string layout_object_name"/>
				<Param name="string layout_object_location"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.CreateObjectScheme">
			<Overload retVal="value">
				<Param name="string scheme_object_name"/>
				<Param name="string scheme_object_location"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.DragContainer"/>		
		<KeyWord name="GUI.Editbox"/>
		<KeyWord name="GUI.Fonts" func="yes">
			<Overload retVal="object Font">
				<Param name="string filename"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Fonts.CreateFont">
			<Overload retVal="object Font">
				<Param name="string filename"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.FrameWindow"/>
		<KeyWord name="GUI.Initialize"/>
		<KeyWord name="GUI.ItemEntry"/>
		<KeyWord name="GUI.ItemListbox"/>
		<KeyWord name="GUI.ListboxItem"/>
		<KeyWord name="GUI.ListboxTextItem"/>
		<KeyWord name="GUI.ListHeader"/>
		<KeyWord name="GUI.ListHeaderSegment"/>
		<KeyWord name="GUI.Menubar"/>
		<KeyWord name="GUI.MenuItem"/>
		<KeyWord name="GUI.MouseCursor"/>
		<KeyWord name="GUI.MultiColumnList"/>
		<KeyWord name="GUI.MultiLineEditbox"/>
		<KeyWord name="GUI.PopupMenu"/>
		<KeyWord name="GUI.ProgressBar"/>
		<KeyWord name="GUI.RadioButton"/>
		<KeyWord name="GUI.Schemes"/>
		<KeyWord name="GUI.Schemes.Get" func="yes">
			<Overload retVal="object scheme">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Schemes.Load" func="yes">
			<Overload retVal="object scheme">
				<Param name="string filename"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Schemes.IsPresent" func="yes">
			<Overload retVal="true or false">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Schemes.Unload" func="yes">
			<Overload retVal="undefined">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.ScrollablePane"/>
		<KeyWord name="GUI.ScrolledContainer"/>
		<KeyWord name="GUI.Slider"/>
		<KeyWord name="GUI.Spinner"/>
		<KeyWord name="GUI.System"/>
		<KeyWord name="GUI.System.SetDefaultMouseCursor" func="yes">
			<Overload retVal="undefined">
				<Param name="string imageset"/>
				<Param name="string image_name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.TabButton"/>
		<KeyWord name="GUI.TabControl"/>
		<KeyWord name="GUI.Titlebar"/>
		<KeyWord name="GUI.Tree"/>
		<KeyWord name="GUI.Window"/>
		<KeyWord name="GUI.Windows"/>
		<KeyWord name="GUI.Windows.AddFactory" func="yes">
			<Overload retVal="true or false" descr="&#x0a;add a window factory.">
				<Param name="string type"/>
				<Param name="function{}"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.CreatWindow" func="yes">
			<Overload retVal="window object" descr="&#x0a;creat a window object with prefix.">
				<Param name="string type"/>
				<Param name="string name"/>
				<Param name="string prefix"/>
			</Overload>
			<Overload retVal="window object" descr="&#x0a;creat a window object.">
				<Param name="string type"/>
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.DestroyWindow" func="yes">
			<Overload retVal="undefined" descr="&#x0a;destory all windows object.">
				<Param name="none"/>
			</Overload>
			<Overload retVal="undefined" descr="&#x0a;destory  the specified window object.">
				<Param name="string windowname"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.Get" func="yes">
			<Overload retVal="string windowname" descr="&#x0a;get a window object.">
				<Param name="string windowname"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.GetCaptureWindow" func="yes">
			<Overload retVal="object window" descr="&#x0a;Returns the current input window which is captured ">
				<Param name="string windowname"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.LoadWindowLayout" func="yes">
			<Overload retVal="the root window of the current window layout " descr="&#x0a;load layout by sspecify the xml file.">
				<Param name="string windowname"/>
				<Param name="bool"/>
			</Overload>
			<Overload retVal="the root window of the current window layout " descr="&#x0a;load layout by sspecify the xml file.">
				<Param name="string windowname"/>
				<Param name="string prefix"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.RemoveFactory" func="yes">
			<Overload retVal="undefined" descr="&#x0a;load layout by sspecify the xml file in the form of XML.">
				<Param name="string type"/>
			</Overload>
		</KeyWord>
		<KeyWord name="GUI.Windows.WriteWindowLayout" func="yes">
			<Overload retVal="undefined or true or v8::String" descr="&#x0a;load layout by sspecify the xml file in the form of XML.">
				<Param name="string windowname"/>
				<Param name="string filename"/>
				<Param name="bool"/>
			</Overload>
		</KeyWord>
		<KeyWord name="handle"/>
		<KeyWord name="handleEvent"/>
		<KeyWord name="hasFocus"/>
		<KeyWord name="hash"/>
		<KeyWord name="height"/>
		<KeyWord name="Hidden"/>
		<KeyWord name="history"/>
		<KeyWord name="History"/>
		<KeyWord name="home"/>
		<KeyWord name="host"/>
		<KeyWord name="hostname"/>
		<KeyWord name="href"/>
		<KeyWord name="hspace"/>
		<KeyWord name="hug"/>
		<KeyWord name="Identity" func="yes">
			<Overload retVal="void" descr="&#x0a; Set this matrix to the identity matrix.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="ids"/>
		<KeyWord name="if"/>
		<KeyWord name="ignoreCase"/>
		<KeyWord name="Image"/>
		<KeyWord name="images"/>
		<KeyWord name="implementation"/>
		<KeyWord name="implements"/>
		<KeyWord name="import"/>
		<KeyWord name="in"/>
		<KeyWord name="In"/>
		<KeyWord name="index"/>
		<KeyWord name="indexOf"/>
		<KeyWord name="Infinity"/>
		<KeyWord name="InitCD" func="yes">
			<Overload retVal="bool" descr="&#x0a;Initialize CD box for the object.&#x0a;
				body -- A three-dimensional vector object.&#x0a;
				legs -- A three-dimensional vector object.&#x0a;
				offset -- A three-dimensional vector object.default=[0,0,0].&#x0a;
				Demo-- InitCD([], [], []);">
				<Param name="vector3 body"/>
				<Param name="vector3 legs"/>
				<Param name="vector3 offset"/>
			</Overload>
		</KeyWord>
		<KeyWord name="InitializeCollision" func="yes">
			<Overload retVal="void">
				<Param name="iCollideSystem colsys "/>
				<Param name="iSector sector "/>
				<Param name="iCollection collection "/>
			</Overload>
		</KeyWord>
		<KeyWord name="InitCDMesh" func="yes">
			<Overload retVal="bool" descr="&#x0a;Initialize CD box for the object.&#x0a;
				percentage -- float value&#x0a;
				Demo -- InitCDMesh(10.2)">
				<Param name="float percentage"/>
			</Overload>
		</KeyWord>
		<KeyWord name="innerHeight"/>
		<KeyWord name="innerWidth"/>
		<KeyWord name="input"/>
		<KeyWord name="Inset"/>
		<KeyWord name="instanceof"/>
		<KeyWord name="InstantiateAnimation" func="yes">
			<Overload retVal="animationInstance object" descr="&#x0a;creat an animation example.">
				<Param name="[animation_object]"/>
			</Overload>
			<Overload retVal="animationInstance object" descr="&#x0a;creat an animation example.">
				<Param name="[string animation_object_name]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="int"/>
		<KeyWord name="intensity"/>
		<KeyWord name="interface"/>
		<KeyWord name="Interrupt" func="yes">
			<Overload retVal="void" descr="&#x0a;Interrupt a movement.&#x0a;
				Demo -- Interrupt();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Intersect"/>
		<KeyWord name="Intersection"/>
		<KeyWord name="Intersects"/>
		<KeyWord name="Invert"/>
		<KeyWord name="InvPerspective" func="yes">
			<Overload retVal="Object csVector3">
				<Param name="csVector2 p"/>
				<Param name="float z"/>
			</Overload>
		</KeyWord>
		<KeyWord name="invFOV"/>
		<KeyWord name="iCelEntity"/>
		<KeyWord name="iCelEntityList"/>
		<KeyWord name="iCelMapFile"/>
		<KeyWord name="iCelNode"/>
		<KeyWord name="iCelPath"/>
		<KeyWord name="iCelPlayerList"/>
		<KeyWord name="iCelPlLayer"/>
		<KeyWord name="iCelPropertyClass"/>
		<KeyWord name="iPcActorMove"/>
		<KeyWord name="iPcBillboard"/>
		<KeyWord name="iPcCamera"/>
		<KeyWord name="iPcCommandInput"/>
		<KeyWord name="iPcDefaultCamera"/>
		<KeyWord name="iPcDynamicMove"/>
		<KeyWord name="iPcLight"/>
		<KeyWord name="iPcLinearMovement"/>
		<KeyWord name="iPcMechanicsBalancedGroup"/>
		<KeyWord name="iPcMechanicsExploder"/>
		<KeyWord name="iPcMechanicsJoint"/>
		<KeyWord name="iPcMechanicsObject"/>
		<KeyWord name="iPcMechanicsSteering"/>
		<KeyWord name="iPcMechanicsSystem"/>
		<KeyWord name="iPcMechanicsThruster"/>
		<KeyWord name="iPcMechanicsThrusterController"/>
		<KeyWord name="iPcMesh"/>
		<KeyWord name="iPcMeshSelect"/>
		<KeyWord name="iPcMovable"/>
		<KeyWord name="iPcNewCamera"/>
		<KeyWord name="iPcPathFinder"/>
		<KeyWord name="iPcProjectile"/>
		<KeyWord name="iPcSimpleCamera"/>
		<KeyWord name="iPcSoundSource"/>
		<KeyWord name="iPcSteer"/>
		<KeyWord name="iPcTimer"/>
		<KeyWord name="iPcTrigger"/>
		<KeyWord name="iPcZoneManager"/>
		<KeyWord name="IsEmpty"/>
		<KeyWord name="IsAncestor" func="yes">
			<Overload retVal="bool" descr="&#x0a;determine weather the specified id window is the parent window of the current window.">
				<Param name="[string window_id]"/>
			</Overload>
			<Overload retVal="bool" descr="&#x0a;determine weather the specified name window is the parent window of the current window.">
				<Param name="[string window_name]"/>
			</Overload>
			<Overload retVal="bool" descr="&#x0a;determine weather the specified  window is the parent window of the current window.">
				<Param name="[string window_class]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="IsBlack"/>
		<KeyWord name="IsChild" func="yes"> 
			<Overload retVal="bool" descr="&#x0a;determine weather the specified id window is the child window of the current window."> 
				<Param name="[string window_id]"/> 
			</Overload> 
				<Overload retVal="bool" descr="&#x0a;determine weather the specified name window is the child window of the current window."> 
				<Param name="[string window_name]"/> 
			</Overload> 
					<Overload retVal="bool" descr="&#x0a;determine weather the specified  window is the child window of the current window."> 
				<Param name="[string window_class]"/> 
			</Overload> 
		</KeyWord> 	
		<KeyWord name="IsChildRecursive" func="yes"> 
			<Overload retVal="bool" descr="&#x0a;determin if there is another specified id window is the child window of the current window."> 
				<Param name="[string window_id]"/> 
			</Overload> 
		</KeyWord>	
		<KeyWord name="IsDisabled" func="yes">
			<Overload retVal="bool" descr="&#x0a;determine weather the current window is disabled.">
				<Param name="[bool]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="isFinite"/>
		<KeyWord name="IsHit" func="yes">
			<Overload retVal="bool" descr="&#x0a;determine weather the position is within the window.">
				<Param name="[vertor2 position]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="IsIdentity" func="yes">
			<Overload retVal="bool" descr="&#x0a; Check if the matrix is identity">
				<Param name=""/>
			</Overload>
			<Overload retVal="bool" descr="&#x0a; Returns true if this transform is an identity transform.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="IsLeft" func="yes">
			<Overload retVal="float" descr="&#x0a;Test if this point is left of the line through v0 and v1.return >0 if this point is left, 0 if on the line and <0 if right.&#x0a;
				v0 - A object of csVector2.&#x0a;
				v1 - A object of csVector2."> 
				<Param name="csVector2 v0" />
				<Param name="csVector2 v1" />
		    </Overload>
		</KeyWord>
		<KeyWord name="IsMoving" func="yes">
			<Overload retVal="bool" descr="&#x0a;Returns the toggle value of moving.">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="isNaN"/>
		<KeyWord name="IsParentOf" func="yes">
			<Overload retVal=" void">
				<Param name=" iObject obj"/>
			</Overload>
		</KeyWord>
		<KeyWord name="italics"/>
		<KeyWord name="IsVisible">
			<Overload retVal="bool" descr="&#x0a;determine whether the mouse cursor is displayed.&#x0a;">
				<Param name="none"/>
			</Overload>
		</KeyWord>
		<KeyWord name="IsZero" func="yes">
			<Overload retVal="bool" descr="&#x0a; Query if the vector is zero.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="java"/>
		<KeyWord name="JavaArray"/>
		<KeyWord name="JavaClass"/>
		<KeyWord name="javaEnabled"/>
		<KeyWord name="JavaObject"/>
		<KeyWord name="JavaPackage"/>
		<KeyWord name="join"/>
		<KeyWord name="Jump" func="yes">
			<Overload retVal="void" descr="&#x0a;Jump.&#x0a;
				Demo -- Jump();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="language"/>
		<KeyWord name="lastChild"/>
		<KeyWord name="lastIndex"/>
		<KeyWord name="lastIndexOf"/>
		<KeyWord name="lastMatch"/>
		<KeyWord name="lastModified"/>
		<KeyWord name="lastParen"/>
		<KeyWord name="Layer"/>
		<KeyWord name="layers"/>
		<KeyWord name="layerX"/>
		<KeyWord name="left"/>
		<KeyWord name="leftContext"/>
		<KeyWord name="length" func="yes">
			<Overload retVal="float" descr="&#x0a;Return the length of a vector.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="lineHeight"/>
		<KeyWord name="link"/>
		<KeyWord name="Link"/>
		<KeyWord name="linkColor"/>
		<KeyWord name="links"/>
		<KeyWord name="listStyleType"/>
		<KeyWord name="livetime"/>
		<KeyWord name="LN10"/>
		<KeyWord name="LN2"/>
		<KeyWord name="load"/>
		<KeyWord name="Load" func="yes">
			<Overload retVal="bool" descr="&#x0a;Load an image from a buffer.&#x0a;
			      camera -- a object of iCamera.&#x0a;
				  engine -- a object of iEngine.&#x0a;">
				<Param name="iCamera camera"/>
				<Param name="iEngine engine"/>
			</Overload>
			<Overload retVal="iImage" descr="&#x0a;Load an image from a buffer.&#x0a;
			    buf -- a object of iDataBuffer.&#x0a;
				iFormat -- a integer parameter.&#x0a;">
				<Param name="iDataBuffer buf"/>
				<Param name="int iFormat"/>
			</Overload>
		</KeyWord>
		<KeyWord name="LoadAnimations" func="yes">
			<Overload retVal="bool" descr="&#x0a;load xml files of animation and initialize an animation object.">
				<Param name="[string xml_filename]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="LoadLibraryFile" func="yes">
			<Overload retVal="bool" descr="&#x0a;Load library from a 'library' node.&#x0a;
				filename -- a VFS filename for the XML file.&#x0a;
				collection -- is 0 by default.&#x0a;
				searchCollectionOnly -- is true by default.&#x0a;
				checkDupes -- is false by default.&#x0a;
				ssource -- is 0 by default.&#x0a;
				missingdata -- is 0 by default.&#x0a;
				keepFlags -- is KEEP_ALL by default.">
				<Param name="[string filename]"/>
				<Param name="[iCollection* collection]"/>
				<Param name="[bool searchCollectionOnly]"/>
				<Param name="[bool checkDupes]"/>
				<Param name="[iStreamSource* ssource]"/>
				<Param name="[iMissingLoaderData* missingdata]"/>
				<Param name="[int keepFlags]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="localName"/>
		<KeyWord name="Location"/>
		<KeyWord name="location"/>
		<KeyWord name="locationbar"/>
		<KeyWord name="Log" func="yes">
			<Overload retVal="csQuaternion" descr="&#x0a; Get quaternion log.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="LOG10E"/>
		<KeyWord name="LOG2E"/>
		<KeyWord name="long"/>
		<KeyWord name="LookAt"/>
		<KeyWord name="loop"/>
		<KeyWord name="lowsrc"/>
		<KeyWord name="Luminance"/>
		<KeyWord name="MakeEmpty"/>
		<KeyWord name="marginBottom"/>
		<KeyWord name="marginLeft"/>
		<KeyWord name="marginRight"/>
		<KeyWord name="margins"/>
		<KeyWord name="marginTop"/>
		<KeyWord name="match"/>
		<KeyWord name="Math"/>
		<KeyWord name="materials"/>
		<KeyWord name="materialwrap"/>
		<KeyWord name="max"/>
		<KeyWord name="Max"/>
		<KeyWord name="maximumdistance"/>
		<KeyWord name="MaxX"/>
		<KeyWord name="MaxY"/>
		<KeyWord name="MaxZ"/>
		<KeyWord name="MAX_VALUE"/>
		<KeyWord name="media"/>
		<KeyWord name="meshes"/>
		<KeyWord name="meshFactories"/>
		<KeyWord name="menubar"/>
		<KeyWord name="mergeAttributes"/>
		<KeyWord name="method"/>
		<KeyWord name="MimeType"/>
		<KeyWord name="mimeTypes"/>
		<KeyWord name="min"/>
		<KeyWord name="Min"/>
		<KeyWord name="minimumdistance"/>
		<KeyWord name="MinX"/>
		<KeyWord name="MinY"/>
		<KeyWord name="MinZ"/>
		<KeyWord name="MIN_VALUE"/>
		<KeyWord name="mirrored"/>
		<KeyWord name="mode"/>
		<KeyWord name="mousemove"/>
		<KeyWord name="MouseMove" func="yes">
			<Overload retVal="void" descr="&#x0a;Handle mouse movement.&#x0a;
				x -- x-axis horizontal coordinates.&#x0a;
				y -- y-axis vertical coordinates.&#x0a;
				MouseMove(2.1, 3.5);">
				<Param name="float x"/>
				<Param name="float y"/>
			</Overload>
		</KeyWord>
		<KeyWord name="mousemove_accelerate"/>
		<KeyWord name="mousemove_inverted"/>
		<KeyWord name="mousemove_xfactor"/>
		<KeyWord name="mousemove_yfactor"/>
		<KeyWord name="movable"/>
		<KeyWord name="Move"/>
		<KeyWord name="Move" func="yes">
			<Overload retVal=" void">
				<Param name=" csVector3 v"/>
				<Param name=" bool cd = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="moveAbove"/>
		<KeyWord name="moveBelow"/>
		<KeyWord name="moveBy"/>
		<KeyWord name="movementSpeed"/>
		<KeyWord name="MoveMesh" func="yes">
			<Overload retVal=" void" descr="&#x0a;Move the mesh to some where.&#x0a;
				position -- The location of Will want to go.&#x0a;
				rotation -- The direction of rotation.&#x0a;
				Demo -- MoveMesh([0, 1, 0], [0 ,0, 1]);">
				<Param name="csVector3 position"/>
				<Param name="csVector3 rotation"/>
			</Overload>
		</KeyWord>
		<KeyWord name="moveTo"/>
		<KeyWord name="moveToAbsolute"/>
		<KeyWord name="MoveUnrestricted" func="yes">
			<Overload retVal=" void">
				<Param name=" csVector3 v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="MoveWorld" func="yes">
			<Overload retVal=" void">
				<Param name=" csVector3 v"/>
				<Param name=" bool cd = true"/>
			</Overload>
		</KeyWord>
		<KeyWord name="MoveWorldUnrestricted" func="yes">
			<Overload retVal=" void">
				<Param name=" csVector3 v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="moving"/>
		<KeyWord name="Mulscalar"/>
		<KeyWord name="multiline"/>
		<KeyWord name="Multiply" func="yes">
			<Overload retVal="csVector2" descr="&#x0a;Multiply this vector2 by a scalar.&#x0a;
				f - a value."> 
				<Param name="float f" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a;  Multiply this vector3 by a scalar.&#x0a;
				f - a value."> 
				<Param name="float f" />
		    </Overload>
			<Overload retVal="csVector4" descr="&#x0a;  Multiply this vector4 by a scalar.&#x0a;
				f - a value."> 
				<Param name="float f" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Multiply another matrix with this matrix.&#x0a;
				m - m is a object of Matrix3."> 
				<Param name="csMatrix3 m" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Multiply this matrix with a scalar."> 
				<Param name="float s" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a;Multiply a vector by a matrix (transform it).&#x0a;
				v -- v is a object of Vector3"> 
				<Param name="csVector3 v" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Multiply this matrix with a scalar."> 
				<Param name="float s" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a;Multiply a vector by a matrix (transform it).&#x0a;
				v -- v is a object of Vector3"> 
				<Param name="csVector3 v" />
		    </Overload>
			<Overload retVal="csMatrix4" descr="&#x0a; Multiply this matrix with a scalar."> 
				<Param name="float s" />
		    </Overload>
			<Overload retVal="csVector4" descr="&#x0a;/ Multiply matrix with a Vector.&#x0a;
				v -- v is a object of csVector4"> 
				<Param name="csVector4 v" />
		    </Overload>
			<Overload retVal="Matrix4" descr="&#x0a; Multiply two matrices.&#x0a;
				m - m is a object of Matrix4."> 
				<Param name="Matrix4 m" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a; Apply a transformation to a 3D vector. This corresponds exactly to calling t.Other2This (v).&#x0a;
				v -- v is a object of csVector3"> 
				<Param name="const csVector3& v" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Multiply a matrix with the transformation matrix. This will calculate and return M*m.
				m - m is a object of csMatrix3."> 
				<Param name="const csMatrix3& m" />
		    </Overload>
		</KeyWord>
		<KeyWord name="MultVector"/>
		<KeyWord name="name"/>
		<KeyWord name="nameProp"/>
		<KeyWord name="namespaces"/>
		<KeyWord name="namespaceURI"/>
		<KeyWord name="NaN"/>
		<KeyWord name="native"/>
		<KeyWord name="navigate"/>
		<KeyWord name="navigator"/>
		<KeyWord name="Negative" func="yes">
			<Overload retVal="csVector2" descr="&#x0a;Unary - operator."> 
				<Param name="" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a; Unary - operator."> 
				<Param name="" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Unary - operator."> 
				<Param name="" />
		    </Overload>
		</KeyWord>
		<KeyWord name="NEGATIVE_INFINITY"/>
		<KeyWord name="netscape"/>
		<KeyWord name="new"/>
		<KeyWord name="New" func="yes">
			<Overload retVal=" Object iCameraPosition ">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="next"/>
		<KeyWord name="Next"/>
		<KeyWord name="nextSibling"/>
		<KeyWord name="NLerp" func="yes">
			<Overload retVal=" csQuaternion" descr="&#x0a;Interpolate this quaternion with another using normalized linea interpolation (nlerp) using given interpolation factor.&#x0a;
				q2 - q2 is a object of csQuaternion.&#x0a;
				 t - The direction of rotation.">
				<Param name="const csQuaternion& q2, float t"/>
			</Overload>
		</KeyWord>
		<KeyWord name="node"/>
		<KeyWord name="nodeName"/>
		<KeyWord name="nodeType"/>
		<KeyWord name="nodeValue"/>
		<KeyWord name="Norm" func="yes">
			<Overload retVal="float" descr="&#x0a;Get the norm of this quaternion.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="Normal" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Returns the unit vector in the direction of this vector.">
				<Param name=""/>
		    </Overload>
			<Overload retVal="csVector4" descr="&#x0a;Returns the unit vector in the direction of this vector.">
				<Param name=""/>
		    </Overload>
		</KeyWord>
		<KeyWord name="Normalize"/>
		<KeyWord name="Notequal" func="yes">
			<Overload retVal="bool" descr="&#x0a;Check if two vectors are not equal.&#x0a;
				v - a object of csVector2.">
				<Param name="csVector2 v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="null"/>
		<KeyWord name="Number"/>
		<KeyWord name="object"/>
		<KeyWord name="Object"/>
		<KeyWord name="offscreenBuffering"/>
		<KeyWord name="onAbort"/>
		<KeyWord name="onActivate"/>
		<KeyWord name="onAfterprint"/>
		<KeyWord name="onAfterupdate"/>
		<KeyWord name="onBeforeactivate"/>
		<KeyWord name="onBeforecut"/>
		<KeyWord name="onBeforedeactivate"/>
		<KeyWord name="onBeforeeditfocus"/>
		<KeyWord name="onBeforepaste"/>
		<KeyWord name="onBeforeprint"/>
		<KeyWord name="onBeforeunload"/>
		<KeyWord name="onBeforeupdate"/>
		<KeyWord name="onBlur"/>
		<KeyWord name="onCellchange"/>
		<KeyWord name="onChange"/>
		<KeyWord name="onClick"/>
		<KeyWord name="onClose"/>
		<KeyWord name="onContextmenu"/>
		<KeyWord name="onControlselect"/>
		<KeyWord name="onCut"/>
		<KeyWord name="onDataavailable"/>
		<KeyWord name="onDatasetchanged"/>
		<KeyWord name="onDatasetcomplete"/>
		<KeyWord name="onDblclick"/>
		<KeyWord name="onDeactivate"/>
		<KeyWord name="onDrag"/>
		<KeyWord name="onDragdrop"/>
		<KeyWord name="onDragend"/>
		<KeyWord name="onDragenter"/>
		<KeyWord name="onDragleave"/>
		<KeyWord name="onDragover"/>
		<KeyWord name="onDragstart"/>
		<KeyWord name="onDrop"/>
		<KeyWord name="oneHitOnly"/>
		<KeyWord name="onError"/>
		<KeyWord name="onErrorupdate"/>
		<KeyWord name="onFocus"/>
		<KeyWord name="onHelp"/>
		<KeyWord name="onKeydown"/>
		<KeyWord name="onKeypress"/>
		<KeyWord name="onKeyup"/>
		<KeyWord name="onLine"/>
		<KeyWord name="onLoad"/>
		<KeyWord name="onlyPortals"/>
		<KeyWord name="onMousedown"/>
		<KeyWord name="onMousemove"/>
		<KeyWord name="onMouseout"/>
		<KeyWord name="onMouseover"/>
		<KeyWord name="onMouseup"/>
		<KeyWord name="onPaste"/>
		<KeyWord name="onPropertychange"/>
		<KeyWord name="onReadystatechange"/>
		<KeyWord name="onReset"/>
		<KeyWord name="onResize"/>
		<KeyWord name="onResizeend"/>
		<KeyWord name="onResizestart"/>
		<KeyWord name="onRowenter"/>
		<KeyWord name="onRowexit"/>
		<KeyWord name="onRowsdelete"/>
		<KeyWord name="onRowsinserted"/>
		<KeyWord name="onScroll"/>
		<KeyWord name="onSelect"/>
		<KeyWord name="onSelectionchange"/>
		<KeyWord name="onSelectstart"/>
		<KeyWord name="onStop"/>
		<KeyWord name="onSubmit"/>
		<KeyWord name="onUnload"/>
		<KeyWord name="open"/>
		<KeyWord name="Open" func="yes">
			<Overload retVal="bool">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="opener"/>
		<KeyWord name="opsProfile"/>
		<KeyWord name="Option"/>
		<KeyWord name="options"/>
		<KeyWord name="oscpu"/>
		<KeyWord name="Other2This" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Transform vector in 'other' space v to a vector in 'this' space.&#x0a;
				v - A object of csVector3."> 
				<Param name="const csVector3& v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="Other2ThisRelative" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Convert vector v in 'other' space to a vector in 'this' space.Use the origin of 'other' space.&#x0a; This will calculate and returnM*v .&#x0a;
				v - A object of csVector3."> 
				<Param name="const csVector3& v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="outerHeight"/>
		<KeyWord name="outerWidth"/>
		<KeyWord name="Outset"/>
		<KeyWord name="Overlap"/>
		<KeyWord name="ownerDocument"/>
		<KeyWord name="package"/>
		<KeyWord name="Packages"/>
		<KeyWord name="paddingBottom"/>
		<KeyWord name="paddingLeft"/>
		<KeyWord name="paddingRight"/>
		<KeyWord name="paddings"/>
		<KeyWord name="paddingTop"/>
		<KeyWord name="page"/>
		<KeyWord name="pageX"/>
		<KeyWord name="pageXOffset"/>
		<KeyWord name="pageY"/>
		<KeyWord name="pageYOffset"/>
		<KeyWord name="paletteCount"/>
		<KeyWord name="parent"/>
		<KeyWord name="parentLayer"/>
		<KeyWord name="parentNode"/>
		<KeyWord name="parentWindow"/>
		<KeyWord name="parse"/>
		<KeyWord name="parseFloat"/>
		<KeyWord name="parseInt"/>
		<KeyWord name="Password"/>
		<KeyWord name="pathname"/>
		<KeyWord name="Pause" func="yes">
			<Overload retVal="void" descr="&#x0a;Pause sound.">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="pcactormove"/>
		<KeyWord name="pcarray"/>
		<KeyWord name="pccommandinput"/>
		<KeyWord name="pccollisiondetection"/>
		<KeyWord name="pcdefaultcamera"/>
		<KeyWord name="pcinventory"/>
		<KeyWord name="pclight"/>
		<KeyWord name="pclinearmovement"/>
		<KeyWord name="pcmechbalancedgroup"/>
		<KeyWord name="pcmechexploder"/>
		<KeyWord name="pcmechjoint"/>
		<KeyWord name="pcmechobject"/>
		<KeyWord name="pcmechsteering"/>
		<KeyWord name="pcmechsystem"/>
		<KeyWord name="pcmechthruster"/>
		<KeyWord name="pcmechthrustercontroller"/>
		<KeyWord name="pcmesh"/>
		<KeyWord name="pcmeshselect"/>
		<KeyWord name="pcmover"/>
		<KeyWord name="pcnewcamera"/>
		<KeyWord name="pcpathfinder"/>
		<KeyWord name="pcprojectile"/>
		<KeyWord name="pcsimplecamera"/>
		<KeyWord name="pcsoundsource"/>
		<KeyWord name="pcsteer"/>
		<KeyWord name="pctimer"/>
		<KeyWord name="pctrigger"/>
		<KeyWord name="pczonemanager"/>
		<KeyWord name="PerformAction" func="yes">
			<Overload retVal="void" descr="&#x0a;Call a function.(Attention:The function has been abandoned!!)&#x0a;
				Demo -- PerformAction('Forward', ['start', true]);">
				<Param name="string functionName"/>
				<Param name="[function Param, value]"/>
				<Param name="[Variable Param]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="personalbar"/>
		<KeyWord name="perspectiveAspect"/>
		<KeyWord name="Perspective" func="yes">
			<Overload retVal="Object csVector2 ">
				<Param name="csVector3  v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="PI"/>
		<KeyWord name="pixelBytes"/>
		<KeyWord name="pixelDepth"/>
		<KeyWord name="pkcs11"/>
		<KeyWord name="platform"/>
		<KeyWord name="Play" func="yes">
			<Overload retVal="void" descr="&#x0a;Play sound.">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Plugin"/>
		<KeyWord name="plugins"/>
		<KeyWord name="plugins.refresh"/>
		<KeyWord name="pop"/>
		<KeyWord name="port"/>
		<KeyWord name="pos"/>
		<KeyWord name="position"/>
		<KeyWord name="Positive" func="yes">
			<Overload retVal="csVector2" descr="&#x0a;Unary + operator."> 
				<Param name="" />
		    </Overload>
			<Overload retVal="csVector3" descr="&#x0a; Unary + operator."> 
				<Param name="" />
		    </Overload>
			<Overload retVal="csMatrix3" descr="&#x0a; Unary + operator."> 
				<Param name="" />
		    </Overload>
		</KeyWord>
		<KeyWord name="POSITIVE_INFINITY"/>
		<KeyWord name="pow"/>
		<KeyWord name="preference"/>
		<KeyWord name="prefix"/>
		<KeyWord name="Prepare" func="yes">
			<Overload retVal="bool">
				<Param name="iProgressMeter mete"/>
			</Overload>
		</KeyWord>
		<KeyWord name="PrepareMeshes" func="yes">
			<Overload retVal="void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="preparedStatement"/>
		<KeyWord name="PrepareTextures" func="yes">
			<Overload retVal="void">
				<Param name=" void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="previous"/>
		<KeyWord name="previousSibling"/>
		<KeyWord name="priAlpha"/>
		<KeyWord name="priCount"/>
		<KeyWord name="print"/>
		<KeyWord name="Print" func="yes">
			<Overload retVal="void">
				<Param name="csRect pArea"/>
			</Overload>
		</KeyWord>
		<KeyWord name="priObject"/>
		<KeyWord name="priPortal"/>
		<KeyWord name="priSky"/>
		<KeyWord name="private"/>
		<KeyWord name="priWall"/>
		<KeyWord name="product"/>
		<KeyWord name="productSub"/>
		<KeyWord name="prompt"/>
		<KeyWord name="prompter"/>
		<KeyWord name="protected"/>
		<KeyWord name="protocol"/>
		<KeyWord name="prototype"/>
		<KeyWord name="public"/>
		<KeyWord name="push"/>
		<KeyWord name="queryCommandEnabled"/>
		<KeyWord name="queryCommandIndeterm"/>
		<KeyWord name="queryCommandState"/>
		<KeyWord name="queryCommandValue"/>
		<KeyWord name="QueryInterface" func="yes">
			<Overload retVal="object" descr="&#x0a;Query a particular interface implemented by this object.&#x0a;
				pcName -- PropertyClass Name.&#x0a;
				Demo -- Object.QueryInterface('iPcSoundSource');">
				<Param name="string pcName"/>
			</Overload>
		</KeyWord>
		<KeyWord name="QuickStep" func="yes">
			<Overload retVal="void" descr="&#x0a;Very fast but not accurate.&#x0a;
				Demo -- QuickStep();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Radio"/>
		<KeyWord name="radius"/>
		<KeyWord name="random"/>
		<KeyWord name="readyState"/>
		<KeyWord name="recalc"/>
		<KeyWord name="refcount"/>
		<KeyWord name="referrer"/>
		<KeyWord name="RegExp"/>
		<KeyWord name="RegisterRenderPriority" func="yes">
			<Overload retVal=" void">
				<Param name="string name "/>
				<Param name="int priority "/>
				<Param name="csRenderPrioritySorting rendsort = CS_RENDPRI_SORT_NONE "/>
			</Overload>
		</KeyWord>
		<KeyWord name="releaseCapture"/>
		<KeyWord name="releaseEvents"/>
		<KeyWord name="reload"/>
		<KeyWord name="replace"/>
		<KeyWord name="Remove" func="yes">
			<Overload retVal="bool">
				<Param name="iCameraPosition obj"/>
			</Overload>
			<Overload retVal="bool">
				<Param name="int n"/>
			</Overload>
			<Overload retVal="void">
				<Param name="void"/>
			</Overload>
			<Overload retVal="void">
				<Param name="iCollection collection"/>
			</Overload>
			<Overload retVal="void">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveBody" func="yes">
			<Overload retVal="void" descr="&#x0a;Remove a given iRigidBody from the system.&#x0a;
				body -- the body to remove from the system.&#x0a;
				Demo -- RemoveBody(body)">
				<Param name="iRigidBody *body"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveBodyFromGroup" func="yes">
			<Overload retVal="void" descr="&#x0a;Remove a body from the specified group.&#x0a;
				body -- the body to remove from the group.&#x0a;
				group -- the name of the group to remove the body from.&#x0a;
				Demo -- RemoveBodyFromGroup(body, 'group')">
				<Param name="iRigidBody *body"/>
				<Param name="const char *group"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveForceTagged" func="yes">
			<Overload retVal="void" descr="&#x0a;Remove the force with the given tag.&#x0a;
				pcobject -- the object that is currently being affected by the given force.&#x0a;
				forceid -- the tag of the desired force.&#x0a;
				Demo -- RemoveForceTagged(pcobject, forceid)">
				<Param name="iPcMechanicsObject *pcobject"/>
				<Param name="uint32 forceid"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveJoint" func="yes">
			<Overload retVal="void" descr="&#x0a;Remove a given joint from the system.&#x0a;
				joint -- joint object.&#x0a;
				Demo -- RemoveJoint(joint);">
				<Param name="iJoint *joint"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveListener" func="yes">
			<Overload retVal=" void">
				<Param name="Object CameraListener "/>
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveLight" func="yes">
			<Overload retVal=" void">
				<Param name="iLight light "/>
			</Overload>
		</KeyWord>
		<KeyWord name="require" func="yes">
			<Overload retVal="bool" descr="&#x0a;Execute a script file.&#x0a;
				Demo -- require('pchelper.js');">
				<Param name="string fileName"/>
				<Param name="[bool Async]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Reset"/>
		<KeyWord name="ResetCollisionPairs" func="yes">
			<Overload retVal="void">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="reset"/>
		<KeyWord name="Resize" func="yes">
			<Overload retVal="bool">
				<Param name="int w"/>
				<Param name="int h"/>
			</Overload>
		</KeyWord>
		<KeyWord name="resizeBy"/>
		<KeyWord name="resizeTo"/>
		<KeyWord name="return"/>
		<KeyWord name="returnValue"/>
		<KeyWord name="reverse"/>
		<KeyWord name="right"/>
		<KeyWord name="rightContext"/>
		<KeyWord name="Rotate" func="yes">
			<Overload retVal="void" descr="&#x0a;Rotate vector around the origin by a given angle in radians.&#x0a;
				angle - angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="float angle"/>
			</Overload>
			<Overload retVal="csVector3" descr="&#x0a;Rotate vector by quaternion.&#x0a;
				v - v is a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateLeft" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop rotating left.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- RotateLeft(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateOther" func="yes">
			<Overload retVal="void" descr="&#x0a;  Rotate the transform by the angle (radians) around the given vector,in other coordinates.
			 v - a object of csVector3.&#x0a;
			 angle --  angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="const csVector3& v, float angle" />
		    </Overload>
		</KeyWord>
		<KeyWord name="RotateRight" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop rotating right.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- RotateRight(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateThis" func="yes">
			<Overload retVal="void" descr="&#x0a;  Rotate the transform by the angle (radians) around the given vector,in these coordinates.
			 v - a object of csVector3.&#x0a;
			 angle --  angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="const csVector3& v, float angle" />
		    </Overload>
		</KeyWord>
		<KeyWord name="RotateTo" func="yes">
			<Overload retVal="void">
				<Param name="['yrot', float]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateX" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Return a rotation matrix around the X axis. &#x0a;
			angle --  angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="float angle"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateY" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Return a rotation matrix around the Y axis. &#x0a;
			angle --  angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="float angle"/>
			</Overload>
		</KeyWord>
		<KeyWord name="RotateZ" func="yes">
			<Overload retVal="csMatrix3" descr="&#x0a;Return a rotation matrix around the Z axis. &#x0a;
			angle --  angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees">
				<Param name="float angle"/>
			</Overload>
		</KeyWord>
		<KeyWord name="rotation"/>
		<KeyWord name="rotationSpeed"/>
		<KeyWord name="round"/>
		<KeyWord name="routeEvents"/>
		<KeyWord name="Row" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Get a row from this matrix as a vector.&#x0a;
			n -- n is the type of size_t of a value.">
				<Param name="size_t n"/>
			</Overload>
			<Overload retVal="csVector4" descr="&#x0a;Get a row from this matrix as a vector.&#x0a;
			n -- n is the type of size_t of a value.">
				<Param name="size_t n"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Run" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop running.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- Run(true);">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="runningSpeed"/>
		<KeyWord name="Save" func="yes">
			<Overload retVal="iDataBuffer" descr="&#x0a;Save an image using format MIME.&#x0a;
				image - a object of iImage.">
				<Param name="iImage image" />
				<Param name="const char mime = 0 " />
				<Param name="const char extraoptions = 0" />
		    </Overload>
		</KeyWord>
		<KeyWord name="saveable"/>
		<KeyWord name="savePreferences"/>
		<KeyWord name="SceneTree" />
		<KeyWord name="SceneTree.getSector" func="yes">
			<Overload retVal="iSector" descr="&#x0a;From the index of sectors, get a sector in Scene Tree.&#x0a;The index is begin from 0.">
				<Param name="int index" />
			</Overload>
		</KeyWord>
		<KeyWord name="SceneTree.getFirstSector" func="yes">
			<Overload retVal="iSector" descr="&#x0a;Get the first sector in Scene Tree.">
				<Param name="void" />
			</Overload>
		</KeyWord>
		<KeyWord name="screen"/>
		<KeyWord name="screenLeft"/>
		<KeyWord name="ScreenShot" func="yes">
			<Overload retVal="iImage">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="screenTop"/>
		<KeyWord name="screenX"/>
		<KeyWord name="screenY"/>
		<KeyWord name="scripts"/>
		<KeyWord name="scroll"/>
		<KeyWord name="scrollbars"/>
		<KeyWord name="scrollBy"/>
		<KeyWord name="scrollByLines"/>
		<KeyWord name="scrollByPages"/>
		<KeyWord name="scrollTo"/>
		<KeyWord name="scrollX"/>
		<KeyWord name="scrollY"/>
		<KeyWord name="search"/>
		<KeyWord name="security"/>
		<KeyWord name="securityPolicy"/>
		<KeyWord name="sector"/>
		<KeyWord name="sectors"/>
		<KeyWord name="Select"/>
		<KeyWord name="select"/>
		<KeyWord name="selected"/>
		<KeyWord name="selectedIndex"/>
		<KeyWord name="selection"/>
		<KeyWord name="self"/>
		<KeyWord name="Send" func="yes">
			<Overload retVal="void">
				<Param name="Object event"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Set" func="yes">
			<Overload retVal="void">
				<Param name=" string sector"/>
				<Param name=" csVector3 pos"/>
				<Param name=" csVector3 forward "/>
				<Param name=" csVector3 upward "/>
			</Overload>
			<Overload retVal="void" descr="&#x0a;Set vector2 to given values.&#x0a;
				x - X component of vector.&#x0a;
				y - Y component of vector.">
				<Param name="float x"/>
				<Param name="float y"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a;Set vector2 to given values.&#x0a;
				v - a object of csVector2.">
				<Param name="csVector2 v"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a;Set vector3 to given values.&#x0a;
				x - X component of vector.&#x0a;
				y - Y component of vector.&#x0a;
				z - Z component of vector.">
				<Param name="float x"/>
				<Param name="float y"/>
				<Param name="float z"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a; Set vector3 to given values.&#x0a;
				v - a object of csVector3.">
				<Param name="csVector3 v"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a;Set vector4 to given values.&#x0a;
				x - X component of vector.&#x0a;
				y - Y component of vector.&#x0a;
				z - Z component of vector.&#x0a;
				w - W component of vector.">
				<Param name="float x"/>
				<Param name="float y"/>
				<Param name="float z"/>
				<Param name="float w"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a; Set vector4 to given values.&#x0a;
				v - a object of csVector4.">
				<Param name="csVector4 v"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a; Set matrix values.&#x0a;
				m - m is a object of matrix3.">
				<Param name="csMatrix3 m"/>
			</Overload>
		</KeyWord>
		<KeyWord name="setActive"/>
		<KeyWord name="SetAngularVelocity" func="yes">
			<Overload retVal="void" descr="&#x0a;Set the orientation of the mesh with three given euler angles.&#x0a;
				velocity -- the direction.&#x0a;
				Demo -- SetAngularVelocity([0, 0, 1]);">
				<Param name="vector3 velocity"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetAnimation" func="yes">
			<Overload retVal="void" descr="&#x0a;Set current animation on underlying pcmesh.&#x0a;
				name -- The model name for the animation.&#x0a;
				cycle -- Determine whether the loop.&#x0a;
				Demo -- SetAnimation('walk', false);">
				<Param name="string name"/>
				<Param name="bool cycle(default=true)"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetAnimationName" func="yes">
			<Overload retVal="void">
				<Param name="string mapping"/>
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetAxisAngle" func="yes">
			<Overload retVal="void" descr="&#x0a; Set a quaternion using axis-angle representation.&#x0a;
			   axis - axis is a object of csVector3 &#x0a;
			    angle - angle is given in radians.for example a rotation of PI/2 will rotate 90 degrees ">   
				<Param name="const csVector3& axis, float angle"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetCenter"/>
		<KeyWord name="SetComponentColor" func="yes">
			<Overload retVal=" void">
				<Param name=" int component "/>
				<Param name=" csVector4 color "/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetClipRect" func="yes">
			<Overload retVal=" void">
				<Param name=" int nMinX "/>
				<Param name=" int nMinY "/>
				<Param name=" int nMaxX "/>
				<Param name=" int nMaxY "/>
			</Overload>
		</KeyWord>
		<KeyWord name="setCursor"/>
		<KeyWord name="setDate"/>
		<KeyWord name="SetDimensions" func="yes">
			<Overload retVal="void" descr="&#x0a;Change the dimensions of the display.&#x0a;
				width -- set the width of display.&#x0a;
				height -- set the height of display.&#x0a;">
				<Param name="int width"/>
				<Param name="int height"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetEulerAngles"/>
		<KeyWord name="SetEulerAngles" func="yes">
			<Overload retVal="void" descr="&#x0a; Set quaternion using Euler angles X, Y, Z, expressed in radians.&#x0a;
			    angles - angles is object of csVector3">   
				<Param name="const csVector3& angles"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetFOV" func="yes">
			<Overload retVal=" void">
				<Param name=" int fov"/>
				<Param name=" int width"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetFOVAngle" func="yes">
			<Overload retVal=" void">
				<Param name=" int fov"/>
				<Param name=" int width"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetFront" func="yes">
			<Overload retVal="void" descr="&#x0a; Set the front vector in 'other' space.&#x0a;
			    v - a object of csVector3."> 
				<Param name="const csVector3& v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="setFullYear"/>
		<KeyWord name="SetGravity" func="yes">
			<Overload retVal="void" descr="&#x0a;Define the gravity for the system.&#x0a;
				gravity -- the gravity value of mesh.&#x0a;
				Demo -- SetGravity([0, 1, 0])">
				<Param name="float gravity"/>
			</Overload>
		</KeyWord>
		<KeyWord name="setHotKeys"/>
		<KeyWord name="setHours"/>
		<KeyWord name="SetIdentity" func="yes">
			<Overload retVal="void" descr="&#x0a; Set quaternion to identity rotation.&#x0a;">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="setInterval"/>
		<KeyWord name="SetMatrix" func="yes">
			<Overload retVal="void" descr="&#x0a;Set quaternion using 3x3 rotation matrix.&#x0a;
				matrix -  matrix is a object of csMatrix3">
				<Param name="const csMatrix3& matrix"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetMesh" func="yes">
			<Overload retVal="void" descr="&#x0a;Set the mesh filename to use.&#x0a;
				name -- The name of the mesh.&#x0a;
				Demo -- SetMesh('player')">
				<Param name="string name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="setMilliseconds"/>
		<KeyWord name="setMinutes"/>
		<KeyWord name="setMonth"/>
		<KeyWord name="SetOrigin"/>
		<KeyWord name="SetOrigin" func="yes">
			<Overload retVal="void" descr="&#x0a; Set origin of transformed coordinate system. This is equivalent to calling SetO2TTranslation().
				 v -- a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetO2T" func="yes">
			<Overload retVal="void" descr="&#x0a;Set 'other' to 'this' transformation matrix.&#x0aThis is the 3x3 matrix M from the transform equation T=M*(O-V).
				 m -- a object of csMatrix3">
				<Param name="const csMatrix3& m"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetO2TTranslation" func="yes">
			<Overload retVal="void" descr="&#x0a;Set 'world' to 'this' translation.&#x0a;This is the vector V from the transform equation T=M*(O-V). This is equivalent to calling SetOrigin().
				 v -- a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetPos"/>
		<KeyWord name="SetPosition" func="yes">
			<Overload retVal="bool" descr="&#x0a;Set position and sector.&#x0a;
				sector -- The current scene name from world.xml.&#x0a;
				position -- the location of it will want to move.&#x0a;
				yrot -- y rotation, default is 0.">
				<Param name="string sector"/>
				<Param name="vector3 position or string position"/>
				<Param name="float yrot"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetProperty" func="yes">
			<Overload retVal="bool">
				<Param name="name"/>
				<Param name="value"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetProjectionMatrix" func="yes">
			<Overload retVal="void" descr="&#x0a;Set the projection matrix to use.&#x0a;
				m -- a object of CS::Math::Matrix4.&#x0a;">
				<Param name="CS::Math::Matrix4 m"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetQuaternion"/>
		<KeyWord name="SetRadius"/>
		<KeyWord name="setResizable"/>
		<KeyWord name="SetRenderTarget" func="yes">
			<Overload retVal="bool" descr="&#x0a;Set the projection matrix to use.&#x0a;
				handle -- a object of iTextureHandle.&#x0a;
				persistent -- persistent If this is true then the current contents of the texture will be preserved when drawing occurs (in the first call to BeginDraw).&#x0a;
				subtexture --  subtexture this specifies the subtexture index if the texture is a cubemap or volume texture.&#x0a;">
				<Param name="iTextureHandle handle"/>
				<Param name="bool persistent"/>
				<Param name="int subtexture"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetRight" func="yes">
			<Overload retVal="void" descr="&#x0a; Set the right vector in 'other' space.&#x0a;
			 v - a object of csVector3."> 
				<Param name="const csVector3& v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="SetScale"/>
		<KeyWord name="setSeconds"/>
		<KeyWord name="SetSize"/>
		<KeyWord name="SetSpeed" func="yes">
			<Overload retVal="void" descr="&#x0a;Set actor's speed.&#x0a;
				movement -- Set the movement speed (default 2.0).&#x0a;
				running --	Set the running speed (default 5.0).&#x0a;
				rotation -- Set the rotation speed (default 1.75).&#x0a;
				jumping -- Set the jumping velocity (default 6.31).&#x0a;
				Demo -- SetSpeed(1.2, 1.3, 2.3, 1.5);">
				<Param name="float movement"/>
				<Param name="float running"/>
				<Param name="float rotation"/>
				<Param name="float jumping"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetStepTime" func="yes">
			<Overload retVal="void" descr="&#x0a;Define the time we want for one step.&#x0a;
				time -- the time (in milliseconds) that one step represents.&#x0a;
				Demo -- SetStepTime(0.01);">
				<Param name="float time"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetSystem" func="yes">
			<Overload retVal="void" descr="&#x0a;Set the dynamic system.&#x0a;
				dynsys -- iDynamicSystem name.&#x0a;
				Demo --- SetSystem('dynsys');">
				<Param name="string dynsys"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetT2O" func="yes">
			<Overload retVal="void" descr="&#x0a; Set 'this' to 'other' transformation matrix.&#x0aThis is equivalent to SetO2T() except that you can now give the  inverse matrix.
			 m - a object of csMatrix3."> 
				<Param name="const csMatrix3& m" />
		    </Overload>
		</KeyWord>
		<KeyWord name="setTime"/>
		<KeyWord name="setTimeout"/>
		<KeyWord name="SetTransform"/>
		<KeyWord name="SetUp" func="yes">
			<Overload retVal="void" descr="&#x0a; Set the up vector in 'other' space.&#x0a;
			 v - a object of csVector3."> 
				<Param name="const csVector3& v" />
		    </Overload>
		</KeyWord>
		<KeyWord name="setUTCDate"/>
		<KeyWord name="setUTCFullYear"/>
		<KeyWord name="setUTCHours"/>
		<KeyWord name="setUTCMilliseconds"/>
		<KeyWord name="setUTCMinutes"/>
		<KeyWord name="setUTCMonth"/>
		<KeyWord name="setUTCSeconds"/>
		<KeyWord name="setUTCSeconds"/>
		<KeyWord name="setValue"/>
		<KeyWord name="SetVelocity" func="yes">
			<Overload retVal="void" desrc="&#x0a;Set the current velocity vector in body coordinates.&#x0a;
				velocity -- the direction what it will want to move.&#x0a;
				Demo -- SetVelocity([0, 1, 0]);">
				<Param name="csVector3 velocity"/>
			</Overload>
		</KeyWord>
		<KeyWord name="setVFSCache" func="yes">
			<Overload retVal="void">
				<Param name="vfspath"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetViewport" func="yes">
			<Overload retVal="void">
				<Param name="int left"/>
				<Param name="int top"/>
				<Param name="int width"/>
				<Param name="int height"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SetVisible" func="yes">
			<Overload retVal="undefined" descr="&#x0a;set weather display the mouse cursor.&#x0a;
				true -- display the mouse cursor.&#x0a;
				false -- do not display the mouse cursor.&#x0a;
				Demo -- SetVisible(true).">>
				<Param name="bool"/>
			</Overload>
		</KeyWord>
		<KeyWord name="setYear"/>
		<KeyWord name="setZOptions"/>
		<KeyWord name="shift"/>
		<KeyWord name="ShineLight" func="yes">
			<Overload retVal="void">
				<Param name="iSector sector"/>
				<Param name="int maxlight = 32"/>
				<Param name="flag = SHADOW_FULL"/>
			</Overload>
		</KeyWord>
		<KeyWord name="short"/>
		<KeyWord name="showHelp"/>
		<KeyWord name="showModalDialog"/>
		<KeyWord name="showModelessDialog"/>
		<KeyWord name="siblingAbove"/>
		<KeyWord name="siblingBelow"/>
		<KeyWord name="sidebar"/>
		<KeyWord name="signText"/>
		<KeyWord name="sin"/>
		<KeyWord name="sizeToContent"/>
		<KeyWord name="SLerp" func="yes">
			<Overload retVal=" csQuaternion" descr="&#x0a;Interpolate this quaternion with another using spherical linear  interpolation (slerp) using given interpolation factor.&#x0a;
				q2 - q2 is a object of csQuaternion.&#x0a;
				 t - The direction of rotation.">
				<Param name="const csQuaternion& q2, float t"/>
			</Overload>
		</KeyWord>
		<KeyWord name="slice"/>
		<KeyWord name="small"/>
		<KeyWord name="sort"/>
		<KeyWord name="soundname"/>
		<KeyWord name="source"/>
		<KeyWord name="speed"/>
		<KeyWord name="splice"/>
		<KeyWord name="split"/>
		<KeyWord name="SQL"/>
		<KeyWord name="sqrt"/>
		<KeyWord name="SQRT1_2"/>
		<KeyWord name="SQRT2"/>
		<KeyWord name="Squad" func="yes">
			<Overload retVal="csQuaternion" descr="&#x0a;Interpolate this quaternion with another (q) using cubic linear interpolation (squad) using given interpolation factor (t) and tangents (t1 and t2).&#x0a;
			    t1 - t1 is a object of csQuaternion &#x0a;
				t2 - t2 is a object of csQuaternion &#x0a;
				 q - q is a object of csQuaternion &#x0a;
				 t - t is a value.">
				<Param name="const csQuaternion & t1, const csQuaternion & t2,const csQuaternion & q, float t"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SquaredLength" func="yes">
			<Overload retVal="float" descr="&#x0a;Return the squared length  of this vector.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="SquaredNorm" func="yes">
			<Overload retVal="float" descr="&#x0a;Get the squared norm of this quaternion (equals dot with itself).">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="SquaredOriginDist"/>
		<KeyWord name="SquaredOriginMaxDist"/>
		<KeyWord name="SquaredPosDist"/>
		<KeyWord name="SquaredPosMaxDist"/>
		<KeyWord name="src"/>
		<KeyWord name="Start" func="yes">
			<Overload retVal="bool" descr="&#x0a;Start a movement of this projectile from its current position.&#x0a;
				direction -- the direction to go in.&#x0a;
				speed -- the speed in units per second.&#x0a;
				maxdist -- the maximum distance to move at which point we will stop and send a pcprojectile_stopped message.&#x0a;
				maxhits -- the maximum number of hits at which point we will stop and send a pcprojectile_stopped message.&#x0a;
				Demo -- Start([0, 0, 1], 20, 100, 5);">
				<Param name="direction"/>
				<Param name="speed"/>
				<Param name="maxdist"/>
				<Param name="maxhits"/>
			</Overload>
		</KeyWord>
		<KeyWord name="statement "/>
		<KeyWord name="static"/>
		<KeyWord name="status"/>
		<KeyWord name="statusbar"/>
		<KeyWord name="stop"/>
		<KeyWord name="Stop" func="yes">
			<Overload retVal="void" descr="&#x0a;Stop sound.">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="StrafeLeft" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop strafing left.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- StrafeLeft(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="StrafeRight" func="yes">
			<Overload retVal="void" descr="&#x0a;Start/stop strafing right.&#x0a;
				start -- Start and stop signs.&#x0a;
				Demo -- StrafeRight(true)">
				<Param name="bool start"/>
			</Overload>
		</KeyWord>
		<KeyWord name="strike"/>
		<KeyWord name="String"/>
		<KeyWord name="Style"/>
		<KeyWord name="styleSheets"/>
		<KeyWord name="sub"/>
		<KeyWord name="Submit"/>
		<KeyWord name="submit"/>
		<KeyWord name="Subscribe" func="yes">
			<Overload retVal="int eventID">
				<Param name="functionObject function(){}"/>
				<Param name="event name"/>
			</Overload>
		</KeyWord>
		<KeyWord name="SubscribeFrame" func="yes">
			<Overload retVal="int eventID">
				<Param name="function(iRenderView rview){}"/>
			</Overload>
		</KeyWord>
		<KeyWord name="UnsubscribeFrame" func="yes">
			<Overload retVal="true or undefined">
				<Param name="int ID"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Subset"/>
		<KeyWord name="substr"/>
		<KeyWord name="substring"/>
		<KeyWord name="Subtract" func="yes">
			<Overload retVal="csVector2" descr="&#x0a;Subtract another vector2 from this vector2.&#x0a;
				v - a object of csVector2.">
				<Param name="csVector2 v"/>
			</Overload>
			<Overload retVal="csVector3" descr="&#x0a;Subtract another vector3 from this vector3.&#x0a;
				v - a object of csVector3.">
				<Param name="csVector3 v"/>
			</Overload>
			<Overload retVal="csVector4" descr="&#x0a;Subtract another vector4 from this vector4.&#x0a;
				v - a object of csVector4.">
				<Param name="csVector4 v"/>
			</Overload>
			<Overload retVal="csMatrix3" descr="&#x0a;Subtract another matrix from this matrix.&#x0a;
				m - a object of csMatrix3.">
				<Param name="csMatrix3 m"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Subtract2"/>
		<KeyWord name="suffixes"/>
		<KeyWord name="sun"/>
		<KeyWord name="sup"/>
		<KeyWord name="super"/>
		<KeyWord name="Superset"/>
		<KeyWord name="switch"/>
		<KeyWord name="synchronized"/>
		<KeyWord name="System" func="no"/>
		<KeyWord name="System.exitcode" func="no"/>
		<KeyWord name="System.GetStackTrace" func="yes">
			<Overload retVal="void" descr="&#x0a;Get stack info.">
				<Param name="[int limitSigned]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="systemLanguage"/>
		<KeyWord name="tags"/>
		<KeyWord name="taint"/>
		<KeyWord name="taintEnabled"/>
		<KeyWord name="tan"/>
		<KeyWord name="target"/>
		<KeyWord name="test"/>
		<KeyWord name="TestClassName" func="yes">
			<Overload retVal="bool" descr="&#x0a;determine whether the window is inheritance of class named class_name(param).">
				<Param name="[string class_name]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="TestIntersect"/>
		<KeyWord name="Text"/>
		<KeyWord name="text"/>
		<KeyWord name="textures"/>
		<KeyWord name="texturemanager"/>
		<KeyWord name="textAlign"/>
		<KeyWord name="Textarea"/>
		<KeyWord name="textDecoration"/>
		<KeyWord name="textIndent"/>
		<KeyWord name="textTransform"/>
		<KeyWord name="thirdperson"/>
		<KeyWord name="this"/>
		<KeyWord name="This2Other" func="yes">
			<Overload retVal="csVector3" descr="&#x0a; Convert vector v in 'this' space to 'other' space.&#x0a;
				v -- v is a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="This2OtherRelative" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Convert vector v in 'this' space to a vector in 'other' space,relative to local origin.&#x0a;This calculates and returns Minv*v (with Minv the inverse of M).
				v -- v is a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="throw"/>
		<KeyWord name="throws"/>
		<KeyWord name="title"/>
		<KeyWord name="ToggleCameraMode" func="yes">
			<Overload retVal="void" descr="&#x0a;Toggle camera mode.&#x0a;
				Demo -- ToggleCameraMode();">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="toGMTString"/>
		<KeyWord name="toLocaleString"/>
		<KeyWord name="toLowerCase"/>
		<KeyWord name="toolbar"/>
		<KeyWord name="top"/>
		<KeyWord name="toSource"/>
		<KeyWord name="toString"/>
		<KeyWord name="toUpperCase"/>
		<KeyWord name="toUTCString"/>
		<KeyWord name="transform"/>
		<KeyWord name="transient"/>
		<KeyWord name="Translate" func="yes">
			<Overload retVal="void" descr="&#x0a;Move the 'other' to 'this' translation by a specified amount.&#x0a; Basically this will add 'v' to the origin or translation of this transform so that the new transform looks like T=M*(O-(V+v)).
			v - a object of csVector3">
				<Param name="const csVector3& v"/>
			</Overload>
		</KeyWord>
		<KeyWord name="Transpose"/>
		<KeyWord name="Transpose" func="yes">
			<Overload retVal="void" descr="&#x0a;Transpose this matrix.">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="true"/>
		<KeyWord name="try"/>
		<KeyWord name="type"/>
		<KeyWord name="typeof"/>
		<KeyWord name="UndefineAutoSubscription" func="yes">
			<Overload retVal="undefined" descr="&#x0a;Cancel the animation specified events and movements of the subscription.">
				<Param name="[string action]"/>
				<Param name="[string eventName]"/>
			</Overload>
			<Overload retVal="undefined" descr="&#x0a;Cancel all the animation  events and movements of the subscription.">
				<Param name="none"/>
			</Overload>
		</KeyWord>
		<KeyWord name="undefined"/>
		<KeyWord name="unescape"/>
		<KeyWord name="Union"/>
		<KeyWord name="Union2"/>
		<KeyWord name="uniqueID"/>
		<KeyWord name="UnitAxisClamped" func="yes">
			<Overload retVal="csVector3" descr="&#x0a;Return a version of the vector clamped to closest unit vector (+-xyz).">
				<Param name=""/>
			</Overload>
		</KeyWord>
		<KeyWord name="Unpause" func="yes">
			<Overload retVal="void" descr="&#x0a;Unpause sound.">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="unshift"/>
		<KeyWord name="Unsubscribe" func="yes">
			<Overload retVal="void">
				<Param name="int eventID"/>
			</Overload>
		</KeyWord>
		<KeyWord name="untaint"/>
		<KeyWord name="unwatch"/>
		<KeyWord name="upward"/>
		<KeyWord name="updateCommands"/>
		<KeyWord name="updateInterval"/>
		<KeyWord name="URL"/>
		<KeyWord name="URLUnencoded"/>
		<KeyWord name="userAgent"/>
		<KeyWord name="userLanguage"/>
		<KeyWord name="userProfile"/>
		<KeyWord name="UTC"/>
		<KeyWord name="value"/>
		<KeyWord name="valueOf"/>
		<KeyWord name="var"/>
		<KeyWord name="variables"/>
		<KeyWord name="ValidateRenderTargets" func="yes">
		<Overload retVal="bool" descr="&#x0a;Check if the current set of render targets is valid.&#x0a;">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="VecGreaterScal" func="yes">
			<Overload retVal="bool" descr="&#x0a;Test if each component of a vector is less than a greater epsilon value.&#x0a;
				f- a value.">
				<Param name="float f" />
		    </Overload>
		</KeyWord>
		<KeyWord name="VecLessScal" func="yes">
			<Overload retVal="bool" descr="&#x0a;Test if each component of a vector is less than a small epsilon value.&#x0a;
				f- a value.">
				<Param name="float f" />
		    </Overload>
			<Overload retVal="bool" descr="&#x0a;Test if each component of a matrix is less than a small epsilon value.&#x0a;
				f- f is a value.">
				<Param name="float f" />
		    </Overload>
		</KeyWord>
		<KeyWord name="vendor"/>
		<KeyWord name="vendorSub"/>
		<KeyWord name="visibility"/>
		<KeyWord name="vLinkcolor"/>
		<KeyWord name="void"/>
		<KeyWord name="volatile"/>
		<KeyWord name="volume"/>
		<KeyWord name="Volume"/>
		<KeyWord name="vspace"/>
		<KeyWord name="watch"/>
		<KeyWord name="while"/>
		<KeyWord name="whiteSpace"/>
		<KeyWord name="width"/>
		<KeyWord name="window"/>
		<KeyWord name="with"/>
		<KeyWord name="write"/>
		<KeyWord name="Write" func="yes">
			<Overload retVal="void">
				<Param name="iFont font"/>
				<Param name="int x"/>
				<Param name="int y"/>
				<Param name="int fg"/>
				<Param name="int bg"/>
				<Param name="string str"/>
				<Param name="int flags = 0"/>
			</Overload>
			<Overload retVal="void" descr="&#x0a;Output the pamra,it has no Enter.&#x0a;
				String -- the value of param.&#x0a;
				Demo -- Write('123456789');">
				<Param name="String"/>
			</Overload>
		</KeyWord>
		<KeyWord name="WriteLine" func="yes">
		<Overload retVal="bool" descr="&#x0a;Output the pamra,it has Enter.&#x0a;
				String -- the value of param.&#x0a;
				Demo -- WriteLine('123456789');">
				<Param name="void"/>
			</Overload>
		</KeyWord>
		<KeyWord name="writeln"/>
		<KeyWord name="x"/>
		<KeyWord name="xmlDocument" />
		<KeyWord name="XMLDocument"/>
		<KeyWord name="XSLDocument"/>
		<KeyWord name="y"/>
		<KeyWord name="zIndex"/>
		<KeyWord name="_content"/>
	</AutoComplete>
</NotepadPlus>
